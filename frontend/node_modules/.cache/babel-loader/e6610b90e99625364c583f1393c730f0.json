{"remainingRequest":"/home/Suhan/proj/recruiting/frontend/node_modules/babel-loader/lib/index.js!/home/Suhan/proj/recruiting/frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/Suhan/proj/recruiting/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/Suhan/proj/recruiting/frontend/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/Suhan/proj/recruiting/frontend/src/views/Login.vue","mtime":1656249082589},{"path":"/home/Suhan/proj/recruiting/frontend/babel.config.js","mtime":1656249082498},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1656249272602},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/babel-loader/lib/index.js","mtime":1655207917470},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1656249272602},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/vue-loader/lib/index.js","mtime":1656249292178}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9ob21lL1N1aGFuL3Byb2ovcmVjcnVpdGluZy9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmpzb24uc3RyaW5naWZ5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwoKLyogZXNsaW50LWRpc2FibGUgZ2xvYmFsLXJlcXVpcmUgKi8KaW1wb3J0IHsgVmFsaWRhdGlvblByb3ZpZGVyLCBWYWxpZGF0aW9uT2JzZXJ2ZXIgfSBmcm9tICd2ZWUtdmFsaWRhdGUnOwppbXBvcnQgVnVleHlMb2dvIGZyb20gJ0Bjb3JlL2xheW91dHMvY29tcG9uZW50cy9Mb2dvLnZ1ZSc7CmltcG9ydCB7IEJSb3csIEJDb2wsIEJMaW5rLCBCRm9ybUdyb3VwLCBCRm9ybUlucHV0LCBCSW5wdXRHcm91cEFwcGVuZCwgQklucHV0R3JvdXAsIEJGb3JtQ2hlY2tib3gsIEJDYXJkVGV4dCwgQkNhcmRUaXRsZSwgQkltZywgQkZvcm0sIEJCdXR0b24gfSBmcm9tICdib290c3RyYXAtdnVlJzsKaW1wb3J0IHsgcmVxdWlyZWQsIGVtYWlsIH0gZnJvbSAnQHZhbGlkYXRpb25zJzsKaW1wb3J0IHsgdG9nZ2xlUGFzc3dvcmRWaXNpYmlsaXR5IH0gZnJvbSAnQGNvcmUvbWl4aW5zL3VpL2Zvcm1zJzsKaW1wb3J0IHN0b3JlIGZyb20gJ0Avc3RvcmUvaW5kZXgnOwppbXBvcnQgVG9hc3RpZmljYXRpb25Db250ZW50IGZyb20gJ0Bjb3JlL2NvbXBvbmVudHMvdG9hc3RpZmljYXRpb24vVG9hc3RpZmljYXRpb25Db250ZW50LnZ1ZSc7CmltcG9ydCB1c2VKd3QgZnJvbSAnQC9hdXRoL2p3dC91c2VKd3QnOwppbXBvcnQgYWJpbGl0eSBmcm9tICdAL2xpYnMvYWNsL2FiaWxpdHknOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQlJvdzogQlJvdywKICAgIEJDb2w6IEJDb2wsCiAgICBCTGluazogQkxpbmssCiAgICBCRm9ybUdyb3VwOiBCRm9ybUdyb3VwLAogICAgQkZvcm1JbnB1dDogQkZvcm1JbnB1dCwKICAgIEJJbnB1dEdyb3VwQXBwZW5kOiBCSW5wdXRHcm91cEFwcGVuZCwKICAgIEJJbnB1dEdyb3VwOiBCSW5wdXRHcm91cCwKICAgIEJGb3JtQ2hlY2tib3g6IEJGb3JtQ2hlY2tib3gsCiAgICBCQ2FyZFRleHQ6IEJDYXJkVGV4dCwKICAgIEJDYXJkVGl0bGU6IEJDYXJkVGl0bGUsCiAgICBCSW1nOiBCSW1nLAogICAgQkZvcm06IEJGb3JtLAogICAgQkJ1dHRvbjogQkJ1dHRvbiwKICAgIFZ1ZXh5TG9nbzogVnVleHlMb2dvLAogICAgVmFsaWRhdGlvblByb3ZpZGVyOiBWYWxpZGF0aW9uUHJvdmlkZXIsCiAgICBWYWxpZGF0aW9uT2JzZXJ2ZXI6IFZhbGlkYXRpb25PYnNlcnZlcgogIH0sCiAgbWl4aW5zOiBbdG9nZ2xlUGFzc3dvcmRWaXNpYmlsaXR5XSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc3RhdHVzOiAnJywKICAgICAgcGFzc3dvcmQ6ICcnLAogICAgICB1c2VyRW1haWw6ICcnLAogICAgICBzaWRlSW1nOiByZXF1aXJlKCdAL2Fzc2V0cy9pbWFnZXMvcGFnZXMvbG9naW4tdjIuc3ZnJyksCiAgICAgIC8vIHZhbGlkYXRpb24gcnVsZXNpbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZS9pbmRleCcKICAgICAgcmVxdWlyZWQ6IHJlcXVpcmVkLAogICAgICBlbWFpbDogZW1haWwKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgcGFzc3dvcmRUb2dnbGVJY29uOiBmdW5jdGlvbiBwYXNzd29yZFRvZ2dsZUljb24oKSB7CiAgICAgIHJldHVybiB0aGlzLnBhc3N3b3JkRmllbGRUeXBlID09PSAncGFzc3dvcmQnID8gJ0V5ZUljb24nIDogJ0V5ZU9mZkljb24nOwogICAgfSwKICAgIGltZ1VybDogZnVuY3Rpb24gaW1nVXJsKCkgewogICAgICBpZiAoc3RvcmUuc3RhdGUuYXBwQ29uZmlnLmxheW91dC5za2luID09PSAnZGFyaycpIHsKICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgdnVlL25vLXNpZGUtZWZmZWN0cy1pbi1jb21wdXRlZC1wcm9wZXJ0aWVzCiAgICAgICAgdGhpcy5zaWRlSW1nID0gcmVxdWlyZSgnQC9hc3NldHMvaW1hZ2VzL3BhZ2VzL2xvZ2luLXYyLWRhcmsuc3ZnJyk7CiAgICAgICAgcmV0dXJuIHRoaXMuc2lkZUltZzsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMuc2lkZUltZzsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGxvZ2luOiBmdW5jdGlvbiBsb2dpbigpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuJHJlZnMubG9naW5Gb3JtLnZhbGlkYXRlKCkudGhlbihmdW5jdGlvbiAoc3VjY2VzcykgewogICAgICAgIGlmIChzdWNjZXNzKSB7CiAgICAgICAgICB2YXIgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgndXNlcm5hbWUnLCBfdGhpcy51c2VyRW1haWwpOwogICAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdwYXNzd29yZCcsIF90aGlzLnBhc3N3b3JkKTsKICAgICAgICAgIHVzZUp3dC5sb2dpbihmb3JtRGF0YSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgdXNlSnd0LnNldFRva2VuKHJlc3BvbnNlLmRhdGEuYWNjZXNzX3Rva2VuKTsKICAgICAgICAgICAgcmV0dXJuIHVzZUp3dC5wcm9maWxlKCk7CiAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgICAgICAgIHZhciBfcmVmMiA9IF9zbGljZWRUb0FycmF5KF9yZWYsIDIpLAogICAgICAgICAgICAgICAgcmVmcmVzaFRva2VuUmVzcG9uc2UgPSBfcmVmMlswXSwKICAgICAgICAgICAgICAgIHByb2ZpbGVSZXNwb25zZSA9IF9yZWYyWzFdOwoKICAgICAgICAgICAgdmFyIHVzZXJEYXRhID0gcHJvZmlsZVJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgIHVzZXJEYXRhLmFiaWxpdHkgPSB7CiAgICAgICAgICAgICAgYWN0aW9uOiAnbWFuYWdlJywKICAgICAgICAgICAgICBzdWJqZWN0OiAnYWxsJwogICAgICAgICAgICB9OwogICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndXNlckRhdGEnLCBKU09OLnN0cmluZ2lmeShwcm9maWxlUmVzcG9uc2UuZGF0YSkpOwogICAgICAgICAgICBhYmlsaXR5LnVwZGF0ZSh1c2VyRGF0YS5hYmlsaXR5KTsKICAgICAgICAgICAgdXNlSnd0LnNldFJlZnJlc2hUb2tlbihyZWZyZXNoVG9rZW5SZXNwb25zZS5kYXRhLmFjY2Vzc190b2tlbik7CgogICAgICAgICAgICBfdGhpcy4kcm91dGVyLnJlcGxhY2UoJy8nKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICBfdGhpcy4kdG9hc3QoewogICAgICAgICAgICAgICAgY29tcG9uZW50OiBUb2FzdGlmaWNhdGlvbkNvbnRlbnQsCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ3RvcC1yaWdodCcsCiAgICAgICAgICAgICAgICBwcm9wczogewogICAgICAgICAgICAgICAgICB0aXRsZTogIldlbGNvbWUgIi5jb25jYXQodXNlckRhdGEubmFtZSB8fCB1c2VyRGF0YS51c2VybmFtZSksCiAgICAgICAgICAgICAgICAgIGljb246ICdDb2ZmZWVJY29uJywKICAgICAgICAgICAgICAgICAgdmFyaWFudDogJ3N1Y2Nlc3MnLAogICAgICAgICAgICAgICAgICB0ZXh0OiAiWW91IGhhdmUgc3VjY2Vzc2Z1bGx5IGxvZ2dlZCBpbi4gTm93IHlvdSBjYW4gc3RhcnQgdG8gZXhwbG9yZSEiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSlbImNhdGNoIl0oZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgIF90aGlzLiRyZWZzLmxvZ2luRm9ybS5zZXRFcnJvcnMoewogICAgICAgICAgICAgIGVtYWlsOiBbJ0VtYWlsIG9yIFBhc3N3b3JkIGlzIEludmFsaWQnXQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA;AACA,SACAA,IADA,EAEAC,IAFA,EAGAC,KAHA,EAIAC,UAJA,EAKAC,UALA,EAMAC,iBANA,EAOAC,WAPA,EAQAC,aARA,EASAC,SATA,EAUAC,UAVA,EAWAC,IAXA,EAYAC,KAZA,EAaAC,OAbA,QAcA,eAdA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;EACAC;IACAb,UADA;IAEAC,UAFA;IAGAC,YAHA;IAIAC,sBAJA;IAKAC,sBALA;IAMAC,oCANA;IAOAC,wBAPA;IAQAC,4BARA;IASAC,oBATA;IAUAC,sBAVA;IAWAC,UAXA;IAYAC,YAZA;IAaAC,gBAbA;IAcAE,oBAdA;IAeAC,sCAfA;IAgBAC;EAhBA,CADA;EAmBAC,kCAnBA;EAoBAC,IApBA,kBAoBA;IACA;MACAC,UADA;MAEAC,YAFA;MAGAC,aAHA;MAIAC,sDAJA;MAKA;MACAC,kBANA;MAOAC;IAPA;EASA,CA9BA;EA+BAC;IACAC,kBADA,gCACA;MACA;IACA,CAHA;IAIAC,MAJA,oBAIA;MACA;QACA;QACA;QACA;MACA;;MACA;IACA;EAXA,CA/BA;EA4CAC;IACAC,KADA,mBACA;MAAA;;MACA;QACA;UACA;UACAC;UACAA;UACAC,OACAF,KADA,CACAC,QADA,EAEAE,IAFA,CAEA;YACAD;YACA;UACA,CALA,EAMAC,IANA,CAMA;YAAA;YAAA;YAAA;;YACA;YACAC;cACAC,gBADA;cAEAC;YAFA;YAIAC;YACAC;YACAN;;YACA;cACA;gBACAO,gCADA;gBAEAC,qBAFA;gBAGAC;kBACAC,4DADA;kBAEAC,kBAFA;kBAGAC,kBAHA;kBAIAC;gBAJA;cAHA;YAUA,CAXA;UAYA,CA3BA,WA4BA;YACA;cAAApB;YAAA;UACA,CA9BA;QA+BA;MACA,CArCA;IAsCA;EAxCA;AA5CA","names":["BRow","BCol","BLink","BFormGroup","BFormInput","BInputGroupAppend","BInputGroup","BFormCheckbox","BCardText","BCardTitle","BImg","BForm","BButton","components","VuexyLogo","ValidationProvider","ValidationObserver","mixins","data","status","password","userEmail","sideImg","required","email","computed","passwordToggleIcon","imgUrl","methods","login","formData","useJwt","then","userData","action","subject","localStorage","ability","component","position","props","title","icon","variant","text"],"sourceRoot":"src/views","sources":["Login.vue"],"sourcesContent":["<template>\n  <div class=\"auth-wrapper auth-v2\">\n    <b-row class=\"auth-inner m-0\">\n      <!-- Brand logo-->\n      <b-link class=\"brand-logo\">\n        <vuexy-logo />\n        <h2 class=\"brand-text text-primary ml-1\">WorkEngageSurvey</h2>\n      </b-link>\n      <!-- /Brand logo-->\n\n      <!-- Left Text-->\n      <b-col lg=\"8\" class=\"d-none d-lg-flex align-items-center p-5\">\n        <div class=\"w-100 d-lg-flex align-items-center justify-content-center px-5\">\n          <b-img fluid :src=\"imgUrl\" alt=\"Login V2\" />\n        </div>\n      </b-col>\n      <!-- /Left Text-->\n\n      <!-- Login-->\n      <b-col lg=\"4\" class=\"d-flex align-items-center auth-bg px-2 p-lg-5\">\n        <b-col sm=\"8\" md=\"6\" lg=\"12\" class=\"px-xl-2 mx-auto\">\n          <b-card-title title-tag=\"h2\" class=\"font-weight-bold mb-1\"> Welcome to WorkEngageSurvey! ðŸ‘‹ </b-card-title>\n          <b-card-text class=\"mb-2\"> Please sign-in to your account and start the adventure </b-card-text>\n\n          <!-- form -->\n          <validation-observer ref=\"loginForm\" #default=\"{ invalid }\">\n            <b-form class=\"auth-login-form mt-2\" @submit.prevent=\"login\">\n              <!-- email -->\n              <b-form-group label=\"Your Work Email\" label-for=\"login-email\">\n                <validation-provider #default=\"{ errors }\" name=\"Email\" vid=\"email\" rules=\"required|email\">\n                  <b-form-input\n                    id=\"login-email\"\n                    v-model=\"userEmail\"\n                    :state=\"errors.length > 0 ? false : null\"\n                    name=\"login-email\"\n                    placeholder=\"john@example.com\"\n                  />\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n\n              <!-- forgot password -->\n              <b-form-group>\n                <div class=\"d-flex justify-content-between\">\n                  <label for=\"login-password\">Password</label>\n                  <b-link :to=\"{ name: 'forgot-password' }\">\n                    <small>Forgot Password?</small>\n                  </b-link>\n                </div>\n                <validation-provider #default=\"{ errors }\" name=\"Password\" vid=\"password\" rules=\"required\">\n                  <b-input-group class=\"input-group-merge\" :class=\"errors.length > 0 ? 'is-invalid' : null\">\n                    <b-form-input\n                      id=\"login-password\"\n                      v-model=\"password\"\n                      :state=\"errors.length > 0 ? false : null\"\n                      class=\"form-control-merge\"\n                      :type=\"passwordFieldType\"\n                      name=\"login-password\"\n                      placeholder=\"Password\"\n                    />\n                    <b-input-group-append is-text>\n                      <feather-icon class=\"cursor-pointer\" :icon=\"passwordToggleIcon\" @click=\"togglePasswordVisibility\" />\n                    </b-input-group-append>\n                  </b-input-group>\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n\n              <!-- checkbox -->\n              <b-form-group>\n                <b-form-checkbox id=\"remember-me\" v-model=\"status\" name=\"checkbox-1\"> Remember Me </b-form-checkbox>\n              </b-form-group>\n\n              <!-- submit buttons -->\n              <b-button type=\"submit\" variant=\"primary\" block :disabled=\"invalid\"> Sign in </b-button>\n            </b-form>\n          </validation-observer>\n\n          <b-card-text class=\"text-center mt-2\">\n            <span>New on our platform? </span>\n            <b-link :to=\"{ name: 'auth-register-v2' }\">\n              <span>&nbsp;Create an account</span>\n            </b-link>\n          </b-card-text>\n\n          <!-- divider -->\n          <!-- <div class=\"divider my-2\">\n            <div class=\"divider-text\">or</div>\n          </div> -->\n\n          <!-- social buttons -->\n          <!-- <div class=\"auth-footer-btn d-flex justify-content-center\">\n            <b-button variant=\"facebook\" href=\"javascript:void(0)\">\n              <feather-icon icon=\"FacebookIcon\" />\n            </b-button>\n            <b-button variant=\"twitter\" href=\"javascript:void(0)\">\n              <feather-icon icon=\"TwitterIcon\" />\n            </b-button>\n            <b-button variant=\"google\" href=\"javascript:void(0)\">\n              <feather-icon icon=\"MailIcon\" />\n            </b-button>\n            <b-button variant=\"github\" href=\"javascript:void(0)\">\n              <feather-icon icon=\"GithubIcon\" />\n            </b-button>\n          </div> -->\n        </b-col>\n      </b-col>\n      <!-- /Login-->\n    </b-row>\n  </div>\n</template>\n\n<script>\n/* eslint-disable global-require */\nimport { ValidationProvider, ValidationObserver } from 'vee-validate';\nimport VuexyLogo from '@core/layouts/components/Logo.vue';\nimport {\n  BRow,\n  BCol,\n  BLink,\n  BFormGroup,\n  BFormInput,\n  BInputGroupAppend,\n  BInputGroup,\n  BFormCheckbox,\n  BCardText,\n  BCardTitle,\n  BImg,\n  BForm,\n  BButton,\n} from 'bootstrap-vue';\nimport { required, email } from '@validations';\nimport { togglePasswordVisibility } from '@core/mixins/ui/forms';\nimport store from '@/store/index';\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue';\nimport useJwt from '@/auth/jwt/useJwt';\nimport ability from '@/libs/acl/ability';\nexport default {\n  components: {\n    BRow,\n    BCol,\n    BLink,\n    BFormGroup,\n    BFormInput,\n    BInputGroupAppend,\n    BInputGroup,\n    BFormCheckbox,\n    BCardText,\n    BCardTitle,\n    BImg,\n    BForm,\n    BButton,\n    VuexyLogo,\n    ValidationProvider,\n    ValidationObserver,\n  },\n  mixins: [togglePasswordVisibility],\n  data() {\n    return {\n      status: '',\n      password: '',\n      userEmail: '',\n      sideImg: require('@/assets/images/pages/login-v2.svg'),\n      // validation rulesimport store from '@/store/index'\n      required,\n      email,\n    };\n  },\n  computed: {\n    passwordToggleIcon() {\n      return this.passwordFieldType === 'password' ? 'EyeIcon' : 'EyeOffIcon';\n    },\n    imgUrl() {\n      if (store.state.appConfig.layout.skin === 'dark') {\n        // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n        this.sideImg = require('@/assets/images/pages/login-v2-dark.svg');\n        return this.sideImg;\n      }\n      return this.sideImg;\n    },\n  },\n  methods: {\n    login() {\n      this.$refs.loginForm.validate().then((success) => {\n        if (success) {\n          const formData = new FormData();\n          formData.append('username', this.userEmail);\n          formData.append('password', this.password);\n          useJwt\n            .login(formData)\n            .then((response) => {\n              useJwt.setToken(response.data.access_token);\n              return useJwt.profile();\n            })\n            .then(([refreshTokenResponse, profileResponse]) => {\n              const userData = profileResponse.data;\n              userData.ability = {\n                action: 'manage',\n                subject: 'all',\n              };\n              localStorage.setItem('userData', JSON.stringify(profileResponse.data));\n              ability.update(userData.ability);\n              useJwt.setRefreshToken(refreshTokenResponse.data.access_token);\n              this.$router.replace('/').then(() => {\n                this.$toast({\n                  component: ToastificationContent,\n                  position: 'top-right',\n                  props: {\n                    title: `Welcome ${userData.name || userData.username}`,\n                    icon: 'CoffeeIcon',\n                    variant: 'success',\n                    text: `You have successfully logged in. Now you can start to explore!`,\n                  },\n                });\n              });\n            })\n            .catch((error) => {\n              this.$refs.loginForm.setErrors({ email: ['Email or Password is Invalid'] });\n            });\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import '@core/scss/vue/pages/page-auth.scss';\n</style>\n"]}]}