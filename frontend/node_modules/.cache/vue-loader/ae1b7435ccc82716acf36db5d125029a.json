{"remainingRequest":"/home/Suhan/proj/recruiting/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/Suhan/proj/recruiting/frontend/src/@core/layouts/components/app-navbar/components/SearchBar.vue?vue&type=style&index=0&id=915d7a8a&lang=scss&scoped=true&","dependencies":[{"path":"/home/Suhan/proj/recruiting/frontend/src/@core/layouts/components/app-navbar/components/SearchBar.vue","mtime":1656249082514},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/css-loader/dist/cjs.js","mtime":1656249291853},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1656249292178},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/postcss-loader/src/index.js","mtime":1656249292104},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/sass-loader/dist/cjs.js","mtime":1656249300848},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1656249272602},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/vue-loader/lib/index.js","mtime":1656249292178}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgJ35AY29yZS9zY3NzL2Jhc2UvYm9vdHN0cmFwLWV4dGVuZGVkL2luY2x1ZGUnOwpAaW1wb3J0ICd+QGNvcmUvc2Nzcy9iYXNlL2NvbXBvbmVudHMvdmFyaWFibGVzLWRhcmsnOwoKdWwKewogIGxpc3Qtc3R5bGU6IG5vbmU7CiAgcGFkZGluZzogMDsKICBtYXJnaW46IDA7Cn0KcCB7CiAgbWFyZ2luOiAwOwp9CgovKiAuYXBwLWF1dG8tc3VnZ2VzdCB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwp9CgouYXV0by1zdWdnZXN0LXN1Z2dlc3Rpb25zLWxpc3QgewogIGJveC1zaGFkb3c6IDAgNHB4IDI0cHggMCByZ2JhKDM0LCA0MSwgNDcsIDAuMSk7CiAgYm9yZGVyLXJhZGl1czogNnB4OwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IGNhbGMoMTAwJSArIDFyZW0pOwogIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOwogIHdpZHRoOiAxMDAlOwp9ICovCgouc3VnZ2VzdGlvbi1ncm91cC10aXRsZSB7CiAgZm9udC13ZWlnaHQ6IDUwMDsKICBwYWRkaW5nOiAuNzVyZW0gMXJlbSAuMjVyZW07Cn0KCi5zdWdnZXN0aW9uLWdyb3VwLXN1Z2dlc3Rpb24gewogIHBhZGRpbmc6IC43NXJlbSAxcmVtCn0KCi5zdWdnZXN0aW9uLWN1cnJlbnQtc2VsZWN0ZWQgewogIGJhY2tncm91bmQtY29sb3I6ICRib2R5LWJnOwoKICAuZGFyay1sYXlvdXQgJiB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGhlbWUtZGFyay1ib2R5LWJnOwogIH0KfQo="},{"version":3,"sources":["SearchBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4QA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"SearchBar.vue","sourceRoot":"src/@core/layouts/components/app-navbar/components","sourcesContent":["<template>\n  <li class=\"nav-item nav-search\">\n\n    <!-- Icon -->\n    <a\n      href=\"javascript:void(0)\"\n      class=\"nav-link nav-link-search\"\n      @click=\"showSearchBar = true\"\n    >\n      <feather-icon\n        icon=\"SearchIcon\"\n        size=\"21\"\n      />\n    </a>\n\n    <!-- Input -->\n    <div\n      class=\"search-input\"\n      :class=\"{'open': showSearchBar}\"\n    >\n      <div class=\"search-input-icon\">\n        <feather-icon icon=\"SearchIcon\" />\n      </div>\n      <!-- <input type=\"text\" placeholder=\"Explore Vuexy....\" class=\"form-control-input\"> -->\n      <!-- @keyup.esc=\"escPressed\" -->\n      <!-- @keyup.enter=\"suggestionSelected\" -->\n      <b-form-input\n        v-if=\"showSearchBar\"\n        v-model=\"searchQuery\"\n        placeholder=\"Explore Vuexy\"\n        autofocus\n        autocomplete=\"off\"\n        @keyup.up=\"increaseIndex(false)\"\n        @keyup.down=\"increaseIndex\"\n        @keyup.esc=\"showSearchBar = false; resetsearchQuery()\"\n        @keyup.enter=\"suggestionSelected\"\n        @blur.stop=\"showSearchBar = false; resetsearchQuery()\"\n      />\n      <div\n        class=\"search-input-close\"\n        @click=\"showSearchBar = false; resetsearchQuery()\"\n      >\n        <feather-icon icon=\"XIcon\" />\n      </div>\n\n      <!-- Suggestions List -->\n      <vue-perfect-scrollbar\n        :settings=\"perfectScrollbarSettings\"\n        class=\"search-list search-list-main scroll-area overflow-hidden\"\n        :class=\"{'show': searchQuery}\"\n        tagname=\"ul\"\n      >\n        <li\n          v-for=\"(suggestion_list, grp_name, grp_index) in filteredData\"\n          :key=\"grp_index\"\n          class=\"suggestions-groups-list\"\n        >\n\n          <!-- Group Header -->\n          <p class=\"suggestion-group-title\">\n            <span>\n              {{ title(grp_name) }}\n            </span>\n          </p>\n\n          <!-- Suggestion List of each group -->\n          <ul>\n            <li\n              v-for=\"(suggestion, index) in suggestion_list\"\n              :key=\"index\"\n              class=\"suggestion-group-suggestion cursor-pointer\"\n              :class=\"{'suggestion-current-selected': currentSelected === `${grp_index}.${index}`}\"\n              @mouseenter=\"currentSelected = `${grp_index}.${index}`\"\n              @mousedown.prevent=\"suggestionSelected(grp_name, suggestion)\"\n            >\n              <b-link\n                v-if=\"grp_name === 'pages'\"\n                class=\"p-0\"\n              >\n                <feather-icon\n                  :icon=\"suggestion.icon\"\n                  class=\"mr-75\"\n                />\n                <span class=\"align-middle\">{{ suggestion.title }}</span>\n              </b-link>\n              <template v-else-if=\"grp_name === 'files'\">\n                <div class=\"d-flex align-items-center\">\n                  <b-img\n                    :src=\"suggestion.icon\"\n                    class=\"mr-1\"\n                    height=\"32\"\n                  />\n                  <div>\n                    <p>{{ suggestion.file_name }}</p>\n                    <small>by {{ suggestion.from }}</small>\n                  </div>\n                  <small class=\"ml-auto\">{{ suggestion.size }}</small>\n                </div>\n              </template>\n              <template v-else-if=\"grp_name === 'contacts'\">\n                <div class=\"d-flex align-items-center\">\n                  <b-avatar\n                    :src=\"suggestion.img\"\n                    class=\"mr-1\"\n                    size=\"32\"\n                  />\n                  <div>\n                    <p>{{ suggestion.name }}</p>\n                    <small>{{ suggestion.email }}</small>\n                  </div>\n                  <small class=\"ml-auto\">{{ suggestion.time }}</small>\n                </div>\n              </template>\n            </li>\n\n            <li\n              v-if=\"!suggestion_list.length && searchQuery\"\n              class=\"suggestion-group-suggestion no-results\"\n            >\n              <p>No Results Found.</p>\n            </li>\n          </ul>\n        </li>\n      </vue-perfect-scrollbar>\n    </div>\n  </li>\n</template>\n\n<script>\nimport {\n  BFormInput, BLink, BImg, BAvatar,\n} from 'bootstrap-vue'\nimport { ref, watch } from '@vue/composition-api'\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\nimport useAutoSuggest from '@core/components/app-auto-suggest/useAutoSuggest'\nimport { title } from '@core/utils/filter'\nimport router from '@/router'\nimport store from '@/store'\nimport searchAndBookmarkData from '../search-and-bookmark-data'\n\nexport default {\n  components: {\n    BFormInput,\n    BLink,\n    BImg,\n    BAvatar,\n    VuePerfectScrollbar,\n  },\n  setup() {\n    const showSearchBar = ref(false)\n\n    const perfectScrollbarSettings = {\n      maxScrollbarLength: 60,\n    }\n\n    const suggestionSelected = (grpName, suggestion) => {\n      // If parameter is not provided => Use current selected\n      if (!suggestion) {\n        // If currentSelected value is -1 => No value/item is selected (Prevent Errors)\n        /* eslint-disable no-use-before-define, no-param-reassign */\n        if (currentSelected.value !== -1) {\n          /* eslint-disable no-use-before-define, no-param-reassign */\n          const [grpIndex, itemIndex] = currentSelected.value.split('.')\n          grpName = Object.keys(filteredData.value)[grpIndex]\n          suggestion = filteredData.value[grpName][itemIndex]\n          /* eslint-enable */\n        }\n      }\n      if (grpName === 'pages') router.push(suggestion.route).catch(() => {})\n      // eslint-disable-next-line no-use-before-define\n      resetsearchQuery()\n      showSearchBar.value = false\n    }\n\n    const {\n      searchQuery,\n      resetsearchQuery,\n      filteredData,\n    } = useAutoSuggest({ data: searchAndBookmarkData, searchLimit: 4 })\n\n    watch(searchQuery, val => {\n      store.commit('app/TOGGLE_OVERLAY', Boolean(val))\n    })\n\n    const currentSelected = ref(-1)\n    watch(filteredData, val => {\n      if (!Object.values(val).some(obj => obj.length)) {\n        currentSelected.value = -1\n      } else {\n        // Auto Select first item if it's not item-404\n        let grpIndex = null\n\n        // eslint-disable-next-line no-restricted-syntax\n        for (const [index, grpSuggestions] of Object.values(val).entries()) {\n          if (grpSuggestions.length) {\n            grpIndex = index\n            break\n          }\n        }\n\n        if (grpIndex !== null) currentSelected.value = `${grpIndex}.0`\n      }\n    })\n\n    const increaseIndex = (val = true) => {\n      /* eslint-disable no-lonely-if, no-plusplus */\n\n      // If there's no matching items\n      if (!Object.values(filteredData.value).some(grpItems => grpItems.length)) return\n\n      const [grpIndex, itemIndex] = currentSelected.value.split('.')\n\n      const grpArr = Object.entries(filteredData.value)\n      const activeGrpTotalItems = grpArr[grpIndex][1].length\n\n      if (val) {\n        // If active item is not of last item in grp\n        if (activeGrpTotalItems - 1 > itemIndex) {\n          currentSelected.value = `${grpIndex}.${Number(itemIndex) + 1}`\n\n        // If active item grp is not last in grp list\n        } else if (grpIndex < grpArr.length - 1) {\n          for (let i = Number(grpIndex) + 1; i < grpArr.length; i++) {\n            // If navigating group have items => Then move in that group\n            if (grpArr[i][1].length > 0) {\n              currentSelected.value = `${Number(i)}.0`\n              break\n            }\n          }\n        }\n      } else {\n        // If active item is not of first item in grp\n        if (Number(itemIndex)) {\n          currentSelected.value = `${grpIndex}.${Number(itemIndex) - 1}`\n\n        // If active item grp  is not first in grp list\n        } else if (Number(grpIndex)) {\n          for (let i = Number(grpIndex) - 1; i >= 0; i--) {\n            // If navigating group have items => Then move in that group\n            if (grpArr[i][1].length > 0) {\n              currentSelected.value = `${i}.${grpArr[i][1].length - 1}`\n              break\n            }\n          }\n        }\n      }\n      /* eslint-enable no-lonely-if, no-plusplus */\n    }\n\n    return {\n      showSearchBar,\n      perfectScrollbarSettings,\n      searchAndBookmarkData,\n      title,\n      suggestionSelected,\n      currentSelected,\n      increaseIndex,\n\n      // AutoSuggest\n      searchQuery,\n      resetsearchQuery,\n      filteredData,\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '~@core/scss/base/bootstrap-extended/include';\n@import '~@core/scss/base/components/variables-dark';\n\nul\n{\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\np {\n  margin: 0;\n}\n\n/* .app-auto-suggest {\n  position: relative;\n}\n\n.auto-suggest-suggestions-list {\n  box-shadow: 0 4px 24px 0 rgba(34, 41, 47, 0.1);\n  border-radius: 6px;\n  position: absolute;\n  top: calc(100% + 1rem);\n  background-color: white;\n  width: 100%;\n} */\n\n.suggestion-group-title {\n  font-weight: 500;\n  padding: .75rem 1rem .25rem;\n}\n\n.suggestion-group-suggestion {\n  padding: .75rem 1rem\n}\n\n.suggestion-current-selected {\n  background-color: $body-bg;\n\n  .dark-layout & {\n    background-color: $theme-dark-body-bg;\n  }\n}\n</style>\n"]}]}