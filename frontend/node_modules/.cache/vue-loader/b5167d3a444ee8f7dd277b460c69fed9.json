{"remainingRequest":"/home/Suhan/proj/recruiting/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/Suhan/proj/recruiting/frontend/src/@core/layouts/layout-vertical/LayoutVertical.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/Suhan/proj/recruiting/frontend/src/@core/layouts/layout-vertical/LayoutVertical.vue","mtime":1656249082518},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/css-loader/dist/cjs.js","mtime":1656249291853},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1656249292178},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/postcss-loader/src/index.js","mtime":1656249292104},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/sass-loader/dist/cjs.js","mtime":1656249300848},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1656249272602},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/vue-loader/lib/index.js","mtime":1656249292178}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICJ+QGNvcmUvc2Nzcy9iYXNlL3RoZW1lcy9ib3JkZXJlZC1sYXlvdXQuc2NzcyI7Cg=="},{"version":3,"sources":["LayoutVertical.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiKA","file":"LayoutVertical.vue","sourceRoot":"src/@core/layouts/layout-vertical","sourcesContent":["<template>\n  <div\n    class=\"vertical-layout h-100\"\n    :class=\"[layoutClasses]\"\n    :data-col=\"isNavMenuHidden ? '1-column' : null\"\n  >\n    <!-- Navbar -->\n    <b-navbar\n      :toggleable=\"false\"\n      :variant=\"navbarBackgroundColor\"\n      class=\"header-navbar navbar navbar-shadow align-items-center\"\n      :class=\"[navbarTypeClass]\"\n    >\n      <slot\n        name=\"navbar\"\n        :toggleVerticalMenuActive=\"toggleVerticalMenuActive\"\n        :navbarBackgroundColor=\"navbarBackgroundColor\"\n        :navbarTypeClass=\"[...navbarTypeClass, 'header-navbar navbar navbar-shadow align-items-center']\"\n      >\n        <app-navbar-vertical-layout :toggle-vertical-menu-active=\"toggleVerticalMenuActive\" />\n      </slot>\n    </b-navbar>\n    <!--/ Navbar -->\n\n    <!-- Vertical Nav Menu -->\n    <vertical-nav-menu\n      v-if=\"!isNavMenuHidden\"\n      :is-vertical-menu-active=\"isVerticalMenuActive\"\n      :toggle-vertical-menu-active=\"toggleVerticalMenuActive\"\n    >\n      <template #header=\"slotProps\">\n        <slot\n          name=\"vertical-menu-header\"\n          v-bind=\"slotProps\"\n        />\n      </template>\n    </vertical-nav-menu>\n    <!-- /Vertical Nav Menu -->\n\n    <!-- Vertical Nav Menu Overlay -->\n    <div\n      class=\"sidenav-overlay\"\n      :class=\"overlayClasses\"\n      @click=\"isVerticalMenuActive = false\"\n    />\n    <!-- /Vertical Nav Menu Overlay -->\n\n    <!-- Content -->\n\n    <!-- CONTENT TYPE: Left -->\n    <transition\n      :name=\"routerTransition\"\n      mode=\"out-in\"\n    >\n      <component\n        :is=\"layoutContentRenderer\"\n        :key=\"layoutContentRenderer === 'layout-content-renderer-left' ? $route.meta.navActiveLink || $route.name : null\"\n      >\n        <template\n          v-for=\"(index, name) in $scopedSlots\"\n          v-slot:[name]=\"data\"\n        >\n          <slot\n            :name=\"name\"\n            v-bind=\"data\"\n          />\n        </template>\n      </component>\n    </transition>\n    <!--/ Content -->\n\n    <!-- Footer -->\n    <footer\n      class=\"footer footer-light\"\n      :class=\"[footerTypeClass]\"\n    >\n      <slot name=\"footer\">\n        <app-footer />\n      </slot>\n    </footer>\n    <!-- /Footer -->\n\n    <slot name=\"customizer\" />\n  </div>\n</template>\n\n<script>\nimport { onUnmounted } from '@vue/composition-api'\nimport AppNavbarVerticalLayout from '@core/layouts/components/app-navbar/AppNavbarVerticalLayout.vue'\nimport AppFooter from '@core/layouts/components/AppFooter.vue'\nimport useAppConfig from '@core/app-config/useAppConfig'\nimport { BNavbar } from 'bootstrap-vue'\nimport LayoutContentRendererDefault from '@core/layouts/components/layout-content-renderer/LayoutContentRendererDefault.vue'\nimport LayoutContentRendererLeft from '@core/layouts/components/layout-content-renderer/LayoutContentRendererLeft.vue'\nimport LayoutContentRendererLeftDetached from '@core/layouts/components/layout-content-renderer/LayoutContentRendererLeftDetached.vue'\nimport VerticalNavMenu from './components/vertical-nav-menu/VerticalNavMenu.vue'\nimport useVerticalLayout from './useVerticalLayout'\nimport mixinVerticalLayout from './mixinVerticalLayout'\n\nexport default {\n  components: {\n    // AppBreadcrumb,\n    AppNavbarVerticalLayout,\n    AppFooter,\n    VerticalNavMenu,\n    BNavbar,\n    LayoutContentRendererLeftDetached,\n    LayoutContentRendererLeft,\n    LayoutContentRendererDefault,\n  },\n  mixins: [mixinVerticalLayout],\n  computed: {\n    layoutContentRenderer() {\n      const rendererType = this.$route.meta.contentRenderer\n      if (rendererType === 'sidebar-left') return 'layout-content-renderer-left'\n      if (rendererType === 'sidebar-left-detached') return 'layout-content-renderer-left-detached'\n      return 'layout-content-renderer-default'\n    },\n  },\n  setup() {\n    const {\n      routerTransition, navbarBackgroundColor, navbarType, footerType, isNavMenuHidden,\n    } = useAppConfig()\n\n    const {\n      isVerticalMenuActive,\n      toggleVerticalMenuActive,\n      isVerticalMenuCollapsed,\n      layoutClasses,\n      overlayClasses,\n      resizeHandler,\n      navbarTypeClass,\n      footerTypeClass,\n    } = useVerticalLayout(navbarType, footerType)\n\n    // Resize handler\n    resizeHandler()\n    window.addEventListener('resize', resizeHandler)\n    onUnmounted(() => {\n      window.removeEventListener('resize', resizeHandler)\n    })\n\n    return {\n      isVerticalMenuActive,\n      toggleVerticalMenuActive,\n      isVerticalMenuCollapsed,\n      overlayClasses,\n      layoutClasses,\n      navbarTypeClass,\n      footerTypeClass,\n\n      // App Config\n      routerTransition,\n      navbarBackgroundColor,\n      isNavMenuHidden,\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import \"~@core/scss/base/themes/bordered-layout.scss\";\n</style>\n"]}]}