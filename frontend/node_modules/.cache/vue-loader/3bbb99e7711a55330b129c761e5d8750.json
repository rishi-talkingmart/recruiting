{"remainingRequest":"/home/Suhan/proj/recruiting/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/Suhan/proj/recruiting/frontend/src/views/Login.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/Suhan/proj/recruiting/frontend/src/views/Login.vue","mtime":1656249082589},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/css-loader/dist/cjs.js","mtime":1656249291853},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1656249292178},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/postcss-loader/src/index.js","mtime":1656249292104},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/sass-loader/dist/cjs.js","mtime":1656249300848},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1656249272602},{"path":"/home/Suhan/proj/recruiting/frontend/node_modules/vue-loader/lib/index.js","mtime":1656249292178}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICdAY29yZS9zY3NzL3Z1ZS9wYWdlcy9wYWdlLWF1dGguc2Nzcyc7Cg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmOA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"auth-wrapper auth-v2\">\n    <b-row class=\"auth-inner m-0\">\n      <!-- Brand logo-->\n      <b-link class=\"brand-logo\">\n        <vuexy-logo />\n        <h2 class=\"brand-text text-primary ml-1\">WorkEngageSurvey</h2>\n      </b-link>\n      <!-- /Brand logo-->\n\n      <!-- Left Text-->\n      <b-col lg=\"8\" class=\"d-none d-lg-flex align-items-center p-5\">\n        <div class=\"w-100 d-lg-flex align-items-center justify-content-center px-5\">\n          <b-img fluid :src=\"imgUrl\" alt=\"Login V2\" />\n        </div>\n      </b-col>\n      <!-- /Left Text-->\n\n      <!-- Login-->\n      <b-col lg=\"4\" class=\"d-flex align-items-center auth-bg px-2 p-lg-5\">\n        <b-col sm=\"8\" md=\"6\" lg=\"12\" class=\"px-xl-2 mx-auto\">\n          <b-card-title title-tag=\"h2\" class=\"font-weight-bold mb-1\"> Welcome to WorkEngageSurvey! ðŸ‘‹ </b-card-title>\n          <b-card-text class=\"mb-2\"> Please sign-in to your account and start the adventure </b-card-text>\n\n          <!-- form -->\n          <validation-observer ref=\"loginForm\" #default=\"{ invalid }\">\n            <b-form class=\"auth-login-form mt-2\" @submit.prevent=\"login\">\n              <!-- email -->\n              <b-form-group label=\"Your Work Email\" label-for=\"login-email\">\n                <validation-provider #default=\"{ errors }\" name=\"Email\" vid=\"email\" rules=\"required|email\">\n                  <b-form-input\n                    id=\"login-email\"\n                    v-model=\"userEmail\"\n                    :state=\"errors.length > 0 ? false : null\"\n                    name=\"login-email\"\n                    placeholder=\"john@example.com\"\n                  />\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n\n              <!-- forgot password -->\n              <b-form-group>\n                <div class=\"d-flex justify-content-between\">\n                  <label for=\"login-password\">Password</label>\n                  <b-link :to=\"{ name: 'forgot-password' }\">\n                    <small>Forgot Password?</small>\n                  </b-link>\n                </div>\n                <validation-provider #default=\"{ errors }\" name=\"Password\" vid=\"password\" rules=\"required\">\n                  <b-input-group class=\"input-group-merge\" :class=\"errors.length > 0 ? 'is-invalid' : null\">\n                    <b-form-input\n                      id=\"login-password\"\n                      v-model=\"password\"\n                      :state=\"errors.length > 0 ? false : null\"\n                      class=\"form-control-merge\"\n                      :type=\"passwordFieldType\"\n                      name=\"login-password\"\n                      placeholder=\"Password\"\n                    />\n                    <b-input-group-append is-text>\n                      <feather-icon class=\"cursor-pointer\" :icon=\"passwordToggleIcon\" @click=\"togglePasswordVisibility\" />\n                    </b-input-group-append>\n                  </b-input-group>\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n\n              <!-- checkbox -->\n              <b-form-group>\n                <b-form-checkbox id=\"remember-me\" v-model=\"status\" name=\"checkbox-1\"> Remember Me </b-form-checkbox>\n              </b-form-group>\n\n              <!-- submit buttons -->\n              <b-button type=\"submit\" variant=\"primary\" block :disabled=\"invalid\"> Sign in </b-button>\n            </b-form>\n          </validation-observer>\n\n          <b-card-text class=\"text-center mt-2\">\n            <span>New on our platform? </span>\n            <b-link :to=\"{ name: 'auth-register-v2' }\">\n              <span>&nbsp;Create an account</span>\n            </b-link>\n          </b-card-text>\n\n          <!-- divider -->\n          <!-- <div class=\"divider my-2\">\n            <div class=\"divider-text\">or</div>\n          </div> -->\n\n          <!-- social buttons -->\n          <!-- <div class=\"auth-footer-btn d-flex justify-content-center\">\n            <b-button variant=\"facebook\" href=\"javascript:void(0)\">\n              <feather-icon icon=\"FacebookIcon\" />\n            </b-button>\n            <b-button variant=\"twitter\" href=\"javascript:void(0)\">\n              <feather-icon icon=\"TwitterIcon\" />\n            </b-button>\n            <b-button variant=\"google\" href=\"javascript:void(0)\">\n              <feather-icon icon=\"MailIcon\" />\n            </b-button>\n            <b-button variant=\"github\" href=\"javascript:void(0)\">\n              <feather-icon icon=\"GithubIcon\" />\n            </b-button>\n          </div> -->\n        </b-col>\n      </b-col>\n      <!-- /Login-->\n    </b-row>\n  </div>\n</template>\n\n<script>\n/* eslint-disable global-require */\nimport { ValidationProvider, ValidationObserver } from 'vee-validate';\nimport VuexyLogo from '@core/layouts/components/Logo.vue';\nimport {\n  BRow,\n  BCol,\n  BLink,\n  BFormGroup,\n  BFormInput,\n  BInputGroupAppend,\n  BInputGroup,\n  BFormCheckbox,\n  BCardText,\n  BCardTitle,\n  BImg,\n  BForm,\n  BButton,\n} from 'bootstrap-vue';\nimport { required, email } from '@validations';\nimport { togglePasswordVisibility } from '@core/mixins/ui/forms';\nimport store from '@/store/index';\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue';\nimport useJwt from '@/auth/jwt/useJwt';\nimport ability from '@/libs/acl/ability';\nexport default {\n  components: {\n    BRow,\n    BCol,\n    BLink,\n    BFormGroup,\n    BFormInput,\n    BInputGroupAppend,\n    BInputGroup,\n    BFormCheckbox,\n    BCardText,\n    BCardTitle,\n    BImg,\n    BForm,\n    BButton,\n    VuexyLogo,\n    ValidationProvider,\n    ValidationObserver,\n  },\n  mixins: [togglePasswordVisibility],\n  data() {\n    return {\n      status: '',\n      password: '',\n      userEmail: '',\n      sideImg: require('@/assets/images/pages/login-v2.svg'),\n      // validation rulesimport store from '@/store/index'\n      required,\n      email,\n    };\n  },\n  computed: {\n    passwordToggleIcon() {\n      return this.passwordFieldType === 'password' ? 'EyeIcon' : 'EyeOffIcon';\n    },\n    imgUrl() {\n      if (store.state.appConfig.layout.skin === 'dark') {\n        // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n        this.sideImg = require('@/assets/images/pages/login-v2-dark.svg');\n        return this.sideImg;\n      }\n      return this.sideImg;\n    },\n  },\n  methods: {\n    login() {\n      this.$refs.loginForm.validate().then((success) => {\n        if (success) {\n          const formData = new FormData();\n          formData.append('username', this.userEmail);\n          formData.append('password', this.password);\n          useJwt\n            .login(formData)\n            .then((response) => {\n              useJwt.setToken(response.data.access_token);\n              return useJwt.profile();\n            })\n            .then(([refreshTokenResponse, profileResponse]) => {\n              const userData = profileResponse.data;\n              userData.ability = {\n                action: 'manage',\n                subject: 'all',\n              };\n              localStorage.setItem('userData', JSON.stringify(profileResponse.data));\n              ability.update(userData.ability);\n              useJwt.setRefreshToken(refreshTokenResponse.data.access_token);\n              this.$router.replace('/').then(() => {\n                this.$toast({\n                  component: ToastificationContent,\n                  position: 'top-right',\n                  props: {\n                    title: `Welcome ${userData.name || userData.username}`,\n                    icon: 'CoffeeIcon',\n                    variant: 'success',\n                    text: `You have successfully logged in. Now you can start to explore!`,\n                  },\n                });\n              });\n            })\n            .catch((error) => {\n              this.$refs.loginForm.setErrors({ email: ['Email or Password is Invalid'] });\n            });\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import '@core/scss/vue/pages/page-auth.scss';\n</style>\n"]}]}