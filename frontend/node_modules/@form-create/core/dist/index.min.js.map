{"version":3,"file":"index.min.js","sources":["../../utils/lib/modify.js","../../utils/lib/extend.js","../../utils/lib/toarray.js","../src/components/formCreate.js","../../utils/lib/type.js","../../utils/lib/mergeprops.js","../src/frame/attrs.js","../../utils/lib/console.js","../../utils/lib/deepextend.js","../../utils/lib/json.js","../src/frame/util.js","../src/factory/creator.js","../src/factory/maker.js","../src/frame/api.js","../src/render/cache.js","../../utils/lib/tocase.js","../../utils/lib/tostring.js","../../utils/lib/toline.js","../../utils/lib/unique.js","../../utils/lib/deepset.js","../src/render/render.js","../src/render/index.js","../src/handler/inject.js","../src/handler/page.js","../src/handler/render.js","../src/factory/context.js","../src/handler/loader.js","../src/handler/input.js","../src/factory/parser.js","../src/handler/context.js","../src/handler/lifecycle.js","../src/handler/effect.js","../src/handler/index.js","../src/frame/fetch.js","../src/components/fragment.js","../src/factory/node.js","../src/factory/manager.js","../src/frame/provider.js","../src/parser/html.js","../src/frame/index.js"],"sourcesContent":["import Vue from 'vue';\n\nexport function $set(target, field, value) {\n    Vue.set(target, field, value);\n}\n\nexport function $del(target, field) {\n    Vue.delete(target, field);\n}\n","import {$set} from './modify';\n\nconst _extends = Object.assign || function (a) {\n    for (let b, c = 1; c < arguments.length; c++) {\n        for (let d in b = arguments[c], b) {\n            Object.prototype.hasOwnProperty.call(b, d) && ($set(a, d, b[d]));\n        }\n    }\n\n    return a;\n}\n\nexport default function extend() {\n    return _extends.apply(this, arguments);\n}\n\nexport function copy(obj) {\n    if (typeof obj !== 'object' || obj === null) return obj;\n    return obj instanceof Array ? [...obj] : {...obj};\n}\n","export default function toArray(value) {\n    return Array.isArray(value)\n        ? value\n        : ([null, undefined, ''].indexOf(value) > -1 ? [] : [value]);\n}\n","import extend from '@form-create/utils/lib/extend';\nimport toArray from '@form-create/utils/lib/toarray';\n\nconst NAME = 'FormCreate';\n\nconst getRuleInject = (vm, parent) => {\n    if (!vm || vm === parent) {\n        return;\n    }\n    if (vm.formCreateInject) {\n        return vm.formCreateInject\n    }\n    if (vm.$parent) {\n        return getRuleInject(vm.$parent, parent);\n    }\n}\n\nexport default function $FormCreate(FormCreate) {\n    return {\n        name: NAME,\n        componentName: NAME,\n        model: {\n            prop: 'api'\n        },\n        provide() {\n            return {\n                $pfc: this,\n            }\n        },\n        inject: {$pfc: {default: null}},\n        props: {\n            rule: {\n                type: Array,\n                required: true\n            },\n            option: {\n                type: Object,\n                default: () => {\n                    return {};\n                }\n            },\n            extendOption: Boolean,\n            value: Object,\n            api: Object,\n            name: String,\n            subForm: {\n                type: Boolean,\n                default: true\n            },\n            inFor: Boolean,\n        },\n        data() {\n            return {\n                formData: undefined,\n                destroyed: false,\n                validate: {},\n                $f: undefined,\n                isShow: true,\n                unique: 1,\n                renderRule: [...this.rule || []],\n                ctxInject: {},\n                updateValue: JSON.stringify(this.value || {}),\n                isMore: !!this.inFor,\n            };\n        },\n        render() {\n            return this.formCreate.render();\n        },\n        methods: {\n            _refresh() {\n                ++this.unique;\n            },\n            _renderRule() {\n                this.renderRule = [...this.rule || []];\n            },\n            _updateValue(value) {\n                if (this.destroyed) return;\n                this.updateValue = JSON.stringify(value);\n                this.$emit('update:value', value);\n            }\n        },\n        watch: {\n            value: {\n                handler(n) {\n                    if (JSON.stringify(n || {}) === this.updateValue) return;\n                    this.$f.setValue(n || {});\n                },\n                deep: true\n            },\n            option: {\n                handler(n) {\n                    this.formCreate.initOptions(n);\n                    this.$f.refresh();\n                },\n                deep: true\n            },\n            rule(n) {\n                if (n.length === this.renderRule.length && n.every(v => this.renderRule.indexOf(v) > -1)) return;\n                this.formCreate.$handle.reloadRule(n);\n                this._renderRule();\n            }\n        },\n        beforeCreate() {\n            const {rule, option} = this.$options.propsData;\n            this.formCreate = new FormCreate(this, rule, option);\n            Object.keys(this.formCreate.prop).forEach(k => {\n                extend(this.$options[k], this.formCreate.prop[k]);\n            })\n            this.$emit('beforeCreate', this.formCreate.api());\n        },\n        created() {\n            const vm = this, fapi = this.formCreate.api();\n            const addSubForm = () => {\n                if (vm.$pfc) {\n                    const inject = getRuleInject(vm, vm.$pfc);\n                    if (inject) {\n                        let sub;\n                        if (vm.isMore) {\n                            sub = toArray(inject.getSubForm());\n                            sub.push(fapi);\n\n                        } else {\n                            sub = fapi;\n                        }\n                        inject.subForm(sub);\n                    }\n                }\n            };\n\n            const rmSubForm = () => {\n                const inject = getRuleInject(vm, vm.$pfc);\n                if (inject) {\n                    if (vm.isMore) {\n                        const sub = toArray(inject.getSubForm());\n                        const idx = sub.indexOf(fapi);\n                        if (idx > -1) {\n                            sub.splice(idx, 1);\n                        }\n                    } else {\n                        inject.subForm();\n                    }\n                }\n            };\n\n            vm.$on('hook:beforeDestroy', () => {\n                rmSubForm();\n            });\n\n            this.$watch(() => this.subForm, (n) => {\n                n ? addSubForm() : rmSubForm();\n            }, {immediate: true});\n        }\n    }\n}\n","const is = {\n    type(arg, type) {\n        return Object.prototype.toString.call(arg) === '[object ' + type + ']'\n    },\n    Undef(v) {\n        return v === undefined || v === null\n    },\n    Element(arg) {\n        return typeof arg === 'object' && arg !== null && arg.nodeType === 1 && !is.Object(arg)\n    },\n    trueArray(data) {\n        return Array.isArray(data) && data.length > 0;\n    },\n    Function(v) {\n        const type = this.getType(v);\n        return type === 'Function' || type === 'AsyncFunction';\n    },\n    getType(v) {\n        const str = Object.prototype.toString.call(v)\n        return /^\\[object (.*)\\]$/.exec(str)[1]\n    },\n    empty(value) {\n        if (value === undefined || value === null) {\n            return true;\n        }\n\n        if (Array.isArray(value) && Array.isArray(value) && !value.length) {\n            return true;\n        }\n\n        return typeof value === 'string' && !value;\n    }\n};\n\n['Date', 'Object', 'String', 'Boolean', 'Array', 'Number'].forEach(t => {\n    is[t] = function (arg) {\n        return is.type(arg, t);\n    }\n})\n\nexport function hasProperty(rule, k) {\n    return ({}).hasOwnProperty.call(rule, k)\n}\n\nexport default is;\n","export const normalMerge = ['attrs', 'props', 'domProps', 'scopedSlots'];\nexport const toArrayMerge = ['class', 'style', 'directives'];\nexport const functionalMerge = ['on', 'nativeOn'];\n\nconst mergeProps = (objects, initial = {}, opt = {}) => {\n    const _normalMerge = [...normalMerge, ...opt['normal'] || []];\n    const _toArrayMerge = [...toArrayMerge, ...opt['array'] || []];\n    const _functionalMerge = [...functionalMerge, ...opt['functional'] || []];\n    const propsMerge = opt['props'] || [];\n\n    return objects.reduce((a, b) => {\n        for (const key in b) {\n            if (a[key]) {\n                if (propsMerge.indexOf(key) > -1) {\n                    a[key] = mergeProps([b[key]], a[key]);\n                } else if (_normalMerge.indexOf(key) > -1) {\n                    a[key] = {...a[key], ...b[key]}\n                } else if (_toArrayMerge.indexOf(key) > -1) {\n                    const arrA = a[key] instanceof Array ? a[key] : [a[key]];\n                    const arrB = b[key] instanceof Array ? b[key] : [b[key]];\n                    a[key] = [...arrA, ...arrB]\n                } else if (_functionalMerge.indexOf(key) > -1) {\n                    for (const event in b[key]) {\n                        if (a[key][event]) {\n                            const arrA = a[key][event] instanceof Array ? a[key][event] : [a[key][event]];\n                            const arrB = b[key][event] instanceof Array ? b[key][event] : [b[key][event]];\n                            a[key][event] = [...arrA, ...arrB]\n                        } else {\n                            a[key][event] = b[key][event]\n                        }\n                    }\n                } else if (key === 'hook') {\n                    for (let hook in b[key]) {\n                        if (a[key][hook]) {\n                            a[key][hook] = mergeFn(a[key][hook], b[key][hook])\n                        } else {\n                            a[key][hook] = b[key][hook]\n                        }\n                    }\n                } else {\n                    a[key] = b[key]\n                }\n            } else {\n                if (_normalMerge.indexOf(key) > -1 || _functionalMerge.indexOf(key) > -1 || propsMerge.indexOf(key) > -1) {\n                    a[key] = {...b[key]}\n                } else if (_toArrayMerge.indexOf(key) > -1) {\n                    a[key] = b[key] instanceof Array ? [...b[key]] : (typeof b[key] === 'object' ? {...b[key]} : b[key]);\n                } else\n                    a[key] = b[key];\n            }\n        }\n        return a\n    }, initial);\n}\n\nconst mergeFn = (fn1, fn2) =>\n    function () {\n        fn1 && fn1.apply(this, arguments);\n        fn2 && fn2.apply(this, arguments);\n    };\n\nexport default mergeProps;\n","import {functionalMerge, normalMerge, toArrayMerge} from '@form-create/utils/lib/mergeprops';\n\n\nexport const keyAttrs = ['type', 'slot', 'emitPrefix', 'value', 'name', 'native', 'hidden', 'display', 'inject', 'options', 'emit', 'nativeEmit', 'link', 'prefix', 'suffix', 'update', 'sync', 'optionsTo', 'key', 'preview', 'component', 'cache'];\n\nexport const arrayAttrs = ['validate', 'children', 'control'];\n\nexport const normalAttrs = ['effect', 'deep'];\n\nexport function attrs() {\n    return [...keyAttrs, ...normalMerge, ...toArrayMerge, ...functionalMerge, ...arrayAttrs, ...normalAttrs];\n}\n","export function format(type, msg, rule) {\n    return (`[form-create ${type}]: ${msg}` + (rule ? ('\\n\\nrule: ' + JSON.stringify(rule.getRule ? rule.getRule() : rule)) : ''))\n}\n\nexport function tip(msg, rule) {\n    console.warn(format('tip', msg, rule));\n}\n\nexport function err(msg, rule) {\n    console.error(format('err', msg, rule));\n}\n\nexport function logError(e) {\n    err(e.toString());\n    console.error(e);\n}\n","import {$set} from './modify';\nimport is from './type';\n\nexport default function deepExtend(origin, target = {}, mode) {\n    let isArr = false;\n    for (let key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n            let clone = target[key];\n            if ((isArr = Array.isArray(clone)) || is.Object(clone)) {\n                let nst = origin[key] === undefined;\n                if (isArr) {\n                    isArr = false;\n                    nst && $set(origin, key, []);\n                } else if (clone._clone && mode !== undefined) {\n                    if (mode) {\n                        clone = clone.getRule();\n                        nst && $set(origin, key, {});\n                    } else {\n                        $set(origin, key, clone._clone());\n                        continue;\n                    }\n                } else {\n                    nst && $set(origin, key, {});\n                }\n                origin[key] = deepExtend(origin[key], clone, mode);\n            } else {\n                $set(origin, key, clone);\n                if (!is.Undef(clone)) {\n                    if (!is.Undef(clone.__json)) {\n                        origin[key].__json = clone.__json;\n                    }\n                    if (!is.Undef(clone.__origin)) {\n                        origin[key].__origin = clone.__origin;\n                    }\n                }\n            }\n        }\n    }\n    return (mode !== undefined && Array.isArray(origin)) ? origin.filter(v => !v || !v.__ctrl) : origin\n}\n\nexport function deepCopy(value) {\n    return deepExtend({}, {value}).value;\n}\n\nexport function deepExtendArgs(origin, ...lst) {\n    lst.forEach(target => {\n        origin = deepExtend(origin, target);\n    });\n    return origin;\n}\n","import deepExtend from './deepextend';\nimport {err} from './console';\nimport is, {hasProperty} from './type';\n\nconst PREFIX = '[[FORM-CREATE-PREFIX-';\nconst SUFFIX = '-FORM-CREATE-SUFFIX]]';\n\nconst $T = '$FN:';\nconst $TX = '$FNX:';\nconst FUNCTION = 'function';\n\nexport function toJson(obj, space) {\n    return JSON.stringify(deepExtend([], obj, true), function (key, val) {\n        if (val && val._isVue === true)\n            return undefined;\n\n        if (typeof val !== FUNCTION) {\n            return val;\n        }\n        if (val.__json) {\n            return val.__json;\n        }\n        if (val.__origin)\n            val = val.__origin;\n\n        if (val.__emit)\n            return undefined;\n        return PREFIX + val + SUFFIX;\n    }, space);\n}\n\nfunction makeFn(fn) {\n    return eval('(' + FUNCTION + '(){return ' + fn + ' })()')\n}\n\nexport function parseFn(fn, mode) {\n    if (fn && is.String(fn) && fn.length > 4) {\n        let v = fn.trim();\n        let flag = false;\n        try {\n            if (v.indexOf(SUFFIX) > 0 && v.indexOf(PREFIX) === 0) {\n                v = v.replace(SUFFIX, '').replace(PREFIX, '');\n                flag = true;\n            } else if (v.indexOf($T) === 0) {\n                v = v.replace($T, '');\n                flag = true;\n            } else if (v.indexOf($TX) === 0) {\n                v = makeFn('function($inject){' + v.replace($TX, '') + '}');\n                v.__json = fn;\n                v.__inject = true;\n                return v;\n            } else if (!mode && v.indexOf(FUNCTION) === 0 && v !== FUNCTION) {\n                flag = true;\n            }\n            if (!flag) return fn;\n            const val = makeFn((v.indexOf(FUNCTION) === -1 && v.indexOf('(') !== 0) ? (FUNCTION + ' ' + v) : v);\n            val.__json = fn;\n            return val;\n        } catch (e) {\n            err(`解析失败:${v}\\n\\nerr: ${e}`);\n            return undefined;\n        }\n    }\n    return fn;\n}\n\nexport function parseJson(json, mode) {\n    return JSON.parse(json, function (k, v) {\n        if (is.Undef(v) || !v.indexOf) return v;\n        return parseFn(v, mode);\n    });\n}\n","import is from '@form-create/utils/lib/type';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\nimport {arrayAttrs, normalAttrs} from './attrs';\nimport {logError} from '@form-create/utils/lib/console';\nimport {parseJson, toJson} from '@form-create/utils/lib/json';\nimport deepExtend from '@form-create/utils/lib/deepextend';\n\nexport {parseFn} from '@form-create/utils/lib/json';\nexport {parseJson, toJson}\n\nexport function enumerable(value, writable) {\n    return {\n        value,\n        enumerable: false,\n        configurable: false,\n        writable: !!writable\n    }\n}\n\n//todo 优化位置\nexport function copyRule(rule) {\n    return copyRules([rule])[0];\n}\n\nexport function copyRules(rules, mode) {\n    return deepExtend([], [...rules], mode || false);\n}\n\nexport function mergeRule(rule, merge) {\n    mergeProps(Array.isArray(merge) ? merge : [merge], rule, {array: arrayAttrs, normal: normalAttrs});\n    return rule;\n}\n\nexport function getRule(rule) {\n    return is.Function(rule.getRule) ? rule.getRule() : rule;\n}\n\nexport function mergeGlobal(target, merge) {\n    if (!target) return merge;\n    Object.keys(merge || {}).forEach((k) => {\n        if (merge[k]) {\n            target[k] = mergeRule(target[k] || {}, merge[k])\n        }\n    });\n    return target;\n}\n\nexport function funcProxy(that, proxy) {\n    Object.defineProperties(that, Object.keys(proxy).reduce((initial, k) => {\n        initial[k] = {\n            get() {\n                return proxy[k]();\n            }\n        }\n        return initial;\n    }, {}))\n}\n\nexport function byCtx(rule) {\n    return rule.__fc__ || (rule.__origin__ ? rule.__origin__.__fc__ : null)\n}\n\nexport function invoke(fn, def) {\n    try {\n        def = fn()\n    } catch (e) {\n        logError(e);\n    }\n    return def;\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is from '@form-create/utils/lib/type';\nimport {attrs} from '../frame/attrs';\nimport {copyRule, mergeRule} from '../frame/util';\nimport {$set} from '@form-create/utils/lib/modify';\n\nexport function baseRule() {\n    return {\n        props: {},\n        on: {},\n        options: [],\n        children: [],\n        hidden: false,\n        display: true,\n        value: undefined,\n    };\n}\n\nexport function creatorFactory(name, init) {\n    return (title, field, value, props = {}) => {\n        const maker = new Creator(name, title, field, value, props);\n        if (init) {\n            if (is.Function(init)) init(maker);\n            else maker.props(init);\n        }\n        return maker;\n    };\n}\n\nexport default function Creator(type, title, field, value, props) {\n    this._data = extend(baseRule(), {type, title, field, value, props: props || {}});\n    this.event = this.on;\n}\n\nextend(Creator.prototype, {\n    getRule() {\n        return this._data;\n    },\n    setProp(key, value) {\n        $set(this._data, key, value);\n        return this;\n    },\n    _clone() {\n        const clone = new this.constructor();\n        clone._data = copyRule(this._data);\n        return clone;\n    },\n})\n\nexport function appendProto(attrs) {\n    attrs.forEach(name => {\n        Creator.prototype[name] = function (key) {\n            mergeRule(this._data, {[name]: arguments.length < 2 ? key : {[key]: arguments[1]}})\n            return this;\n        };\n    });\n}\n\nappendProto(attrs());\n","import {creatorFactory} from './creator';\n\nconst commonMaker = creatorFactory('');\n\nexport function create(type, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = type;\n    make._data.title = title;\n    return make;\n}\n\nexport function createTmp(template, vm, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = 'template';\n    make._data.template = template;\n    make._data.title = title;\n    make._data.vm = vm;\n    return make;\n}\n\nexport default function makerFactory() {\n    return {\n        create,\n        createTmp,\n        template: createTmp,\n        factory: creatorFactory\n    };\n}\n","import {byCtx, invoke, mergeRule, toJson} from './util';\nimport {$set} from '@form-create/utils/lib/modify';\nimport {deepCopy} from '@form-create/utils/lib/deepextend';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport extend from '@form-create/utils/lib/extend';\nimport {format} from '@form-create/utils/lib/console';\n\n\nfunction copy(value) {\n    return deepCopy(value);\n}\n\nexport default function Api(h) {\n\n    function tidyFields(fields) {\n        if (is.Undef(fields))\n            fields = h.fields();\n        else if (!Array.isArray(fields))\n            fields = [fields];\n        return fields;\n    }\n\n    function props(fields, key, val) {\n        tidyFields(fields).forEach(field => {\n            h.getCtxs(field).forEach(ctx => {\n                $set(ctx.rule, key, val);\n                h.$render.clearCache(ctx);\n            });\n        })\n    }\n\n    function allSubForm() {\n        const subs = h.subForm;\n        return Object.keys(subs).reduce((initial, k) => {\n            const sub = subs[k];\n            if (!sub) return initial;\n            if (Array.isArray(sub))\n                initial.push(...sub);\n            else\n                initial.push(sub);\n            return initial;\n        }, []);\n    }\n\n    const api = {\n        get config() {\n            return h.options\n        },\n        get options() {\n            return h.options\n        },\n        get form() {\n            return h.form\n        },\n        get rule() {\n            return h.rules\n        },\n        get parent() {\n            return h.vm.$pfc && h.vm.$pfc.$f\n        },\n        get children() {\n            return allSubForm();\n        },\n        formData(fields) {\n            return tidyFields(fields).reduce((initial, id) => {\n                const ctx = h.getFieldCtx(id);\n                if (!ctx) return initial;\n                initial[ctx.field] = copy(ctx.rule.value);\n                return initial;\n            }, h.options.appendValue ? copy(h.appendData) : {});\n        },\n        getValue(field) {\n            const ctx = h.getFieldCtx(field);\n            if (!ctx) return;\n            return copy(ctx.rule.value);\n        },\n        coverValue(formData) {\n            h.deferSyncValue(() => {\n                api.fields().forEach(key => {\n                    const ctxs = h.fieldCtx[key];\n                    if (!ctxs) return h.appendData[key] = formData[key];\n                    const flag = hasProperty(formData, key);\n                    ctxs.forEach(ctx => {\n                        ctx.rule.value = flag ? formData[key] : undefined;\n                    })\n                });\n            })\n        },\n        setValue(field) {\n            let formData = field;\n            if (arguments.length >= 2)\n                formData = {[field]: arguments[1]};\n            h.deferSyncValue(() => {\n                Object.keys(formData).forEach(key => {\n                    const ctxs = h.fieldCtx[key];\n                    if (!ctxs) return h.appendData[key] = formData[key];\n                    ctxs.forEach(ctx => {\n                        ctx.rule.value = formData[key];\n                    });\n                });\n            })\n        },\n        removeField(field) {\n            const ctx = h.getCtx(field);\n            h.deferSyncValue(() => {\n                h.getCtxs(field).forEach(ctx => {\n                    ctx.rm();\n                });\n            }, true);\n            return ctx ? ctx.origin : undefined;\n        },\n        removeRule(rule) {\n            const ctx = rule && byCtx(rule);\n            if (!ctx) return;\n            ctx.rm();\n            return ctx.origin;\n        },\n        destroy: () => {\n            h.vm.$el.parentNode && h.vm.$el.parentNode.removeChild(h.vm.$el);\n            h.vm.$destroy();\n        },\n        fields: () => h.fields(),\n        append: (rule, after, child) => {\n            let index = h.sort.length - 1, rules;\n            const ctx = h.getCtx(after);\n\n            if (ctx) {\n                if (child) {\n                    rules = ctx.rule.children;\n                    index = ctx.rule.children.length - 1;\n                } else {\n                    index = ctx.root.indexOf(ctx.origin);\n                    rules = ctx.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index + 1, 0, rule);\n        },\n        prepend: (rule, after, child) => {\n            let index = 0, rules;\n            const ctx = h.getCtx(after);\n\n            if (ctx) {\n                if (child) {\n                    rules = ctx.rule.children;\n                } else {\n                    index = ctx.root.indexOf(ctx.origin);\n                    rules = ctx.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index, 0, rule);\n        },\n        hidden(state, fields) {\n            props(fields, 'hidden', !!state);\n            h.refresh();\n        },\n        hiddenStatus(id) {\n            const ctx = h.getCtx(id);\n            if (!ctx) return;\n            return !!ctx.rule.hidden;\n        },\n        display(state, fields) {\n            props(fields, 'display', !!state);\n            h.refresh();\n        },\n        displayStatus(id) {\n            const ctx = h.getCtx(id);\n            if (!ctx) return;\n            return !!ctx.rule.display;\n        },\n        disabled(disabled, fields) {\n            tidyFields(fields).forEach((field) => {\n                h.getCtxs(field).forEach(ctx => {\n                    ctx.rule.props && $set(ctx.rule.props, 'disabled', !!disabled);\n                });\n            });\n            h.refresh();\n        },\n        all(origin) {\n            return Object.keys(h.ctxs).map(k => {\n                const ctx = h.ctxs[k];\n                return origin ? ctx.origin : ctx.rule;\n            });\n        },\n        model(origin) {\n            return h.fields().reduce((initial, key) => {\n                const ctx = h.fieldCtx[key][0];\n                initial[key] = origin ? ctx.origin : ctx.rule;\n                return initial;\n            }, {});\n        },\n        component(origin) {\n            return Object.keys(h.nameCtx).reduce((initial, key) => {\n                const ctx = h.nameCtx[key].map(ctx => origin ? ctx.origin : ctx.rule);\n                initial[key] = ctx.length === 1 ? ctx[0] : ctx;\n                return initial;\n            }, {});\n        },\n        bind() {\n            return api.form;\n        },\n        reload: (rules) => {\n            h.reloadRule(rules)\n        },\n        updateOptions(options) {\n            h.fc.updateOptions(options);\n            api.refresh();\n        },\n        onSubmit(fn) {\n            api.updateOptions({onSubmit: fn});\n        },\n        sync: (field) => {\n            if (Array.isArray(field)) {\n                field.forEach(v => api.sync(v));\n                return;\n            }\n            let ctxs = is.Object(field) ? byCtx(field) : h.getCtxs(field);\n            if (!ctxs) {\n                return;\n            }\n            ctxs = Array.isArray(ctxs) ? ctxs : [ctxs];\n            ctxs.forEach(ctx => {\n                if (!ctx.deleted) {\n                    const subForm = h.subForm[ctx.id];\n                    if (subForm) {\n                        if (Array.isArray(subForm)) {\n                            subForm.forEach(form => {\n                                form.refresh();\n                            })\n                        } else if (subForm) {\n                            subForm.refresh();\n                        }\n                    }\n                    //ctx.updateKey(true);\n                    h.$render.clearCache(ctx);\n                }\n            });\n            h.refresh();\n        },\n        refresh: () => {\n            allSubForm().forEach(sub => {\n                sub.refresh();\n            });\n            h.$render.clearCacheAll();\n            h.refresh();\n        },\n        refreshOptions() {\n            h.$manager.updateOptions(h.options);\n            api.refresh();\n        },\n        hideForm: (hide) => {\n            $set(h.vm, 'isShow', !hide);\n        },\n        changeStatus: () => {\n            return h.changeStatus;\n        },\n        clearChangeStatus: () => {\n            h.changeStatus = false;\n        },\n        updateRule(id, rule) {\n            h.getCtxs(id).forEach(ctx => {\n                extend(ctx.rule, rule);\n            });\n        },\n        updateRules(rules) {\n            Object.keys(rules).forEach(id => {\n                api.updateRule(id, rules[id]);\n            })\n        },\n        mergeRule: (id, rule) => {\n            h.getCtxs(id).forEach(ctx => {\n                mergeRule(ctx.rule, rule);\n            });\n        },\n        mergeRules(rules) {\n            Object.keys(rules).forEach(id => {\n                api.mergeRule(id, rules[id]);\n            })\n        },\n        getRule: (id, origin) => {\n            const ctx = h.getCtx(id);\n            if (ctx) {\n                return origin ? ctx.origin : ctx.rule;\n            }\n        },\n        setEffect(id, attr, value) {\n            const ctx = h.getCtx(id);\n            if (ctx && attr) {\n                if (attr[0] === '$') {\n                    attr = attr.substr(1);\n                }\n                if (hasProperty(ctx.rule, '$' + attr)) {\n                    $set(ctx.rule, '$' + attr, value);\n                }\n                if (!hasProperty(ctx.rule, 'effect')) {\n                    ctx.rule.effect = {};\n                }\n                $set(ctx.rule.effect, attr, value);\n            }\n        },\n        updateValidate(id, validate, merge) {\n            if (merge) {\n                api.mergeRule(id, {validate})\n            } else {\n                props(id, 'validate', validate);\n            }\n        },\n        updateValidates(validates, merge) {\n            Object.keys(validates).forEach(id => {\n                api.updateValidate(id, validates[id], merge);\n            })\n        },\n        refreshValidate() {\n            h.vm.validate = {};\n            api.refresh();\n        },\n        resetFields(fields) {\n            tidyFields(fields).forEach(field => {\n                h.getCtxs(field).forEach(ctx => {\n                    h.$render.clearCache(ctx);\n                    ctx.rule.value = copy(ctx.defaultValue);\n                    h.refreshControl(ctx);\n                });\n            });\n        },\n        method(id, name) {\n            const el = api.el(id);\n            if (!el || !el[name])\n                throw new Error(format('err', `${name}方法不存在`));\n            return (...args) => {\n                return el[name](...args);\n            }\n        },\n        exec(id, name, ...args) {\n            return invoke(() => api.method(id, name)(...args));\n        },\n        toJson(space) {\n            return toJson(api.rule, space);\n        },\n        trigger(id, event, ...args) {\n            const el = api.el(id);\n            el && el.$emit(event, ...args);\n        },\n        el(id) {\n            const ctx = h.getCtx(id);\n            if (ctx) return ctx.el || h.vm.$refs[ctx.ref];\n        },\n        closeModal: (id) => {\n            const el = api.el(id);\n            el && el.$emit && el.$emit('close-modal');\n        },\n        getSubForm(field) {\n            const ctx = h.getCtx(field);\n            return ctx ? h.subForm[ctx.id] : undefined;\n        },\n        nextTick(fn) {\n            h.bus.$once('next-tick', fn);\n            h.refresh();\n        },\n        nextRefresh(fn) {\n            h.nextRefresh();\n            fn && invoke(fn);\n        },\n        emit(name, ...args) {\n            h.vm.$emit(name, ...args);\n        },\n        helper: {\n            tidyFields, props\n        }\n    };\n\n    ['on', 'once', 'off', 'set'].forEach(n => {\n        api[n] = function (...args) {\n            h.vm[`$${n}`](...args);\n        }\n    });\n\n    api.changeValue = api.changeField = api.setValue;\n\n    return api;\n}\n","import extend from '@form-create/utils/lib/extend';\n\nexport default function useCache(Render) {\n    extend(Render.prototype, {\n        initCache() {\n            this.clearCacheAll();\n        },\n        clearCache(ctx) {\n            if (!this.cache[ctx.id]) {\n                ctx.parent && this.clearCache(ctx.parent);\n                return;\n            }\n            if (this.cache[ctx.id].use === true || this.cache[ctx.id].parent) {\n                this.$handle.refresh();\n            }\n            const parent = this.cache[ctx.id].parent;\n            this.cache[ctx.id] = null;\n            parent && this.clearCache(parent);\n        },\n        clearCacheAll() {\n            this.cache = {};\n        },\n        setCache(ctx, vnode, parent) {\n            this.cache[ctx.id] = {\n                vnode,\n                use: false,\n                parent,\n                slot: ctx.rule.slot\n            };\n        },\n        getCache(ctx) {\n            const cache = this.cache[ctx.id];\n            cache.use = true;\n            return cache.vnode;\n        }\n    })\n\n}\n","export default function toCase(str) {\n    const to = str.replace(/(-[a-z])/g, function (v) {\n        return v.replace('-', '').toLocaleUpperCase();\n    });\n\n    return lower(to);\n}\n\nexport function lower(str) {\n    return str.replace(str[0], str[0].toLowerCase());\n}\n","export default function toString(val) {\n    return val == null\n        ? ''\n        : typeof val === 'object'\n            ? JSON.stringify(val, null, 2)\n            : String(val)\n}\n","export default function toLine(name) {\n    let line = name.replace(/([A-Z])/g, '-$1').toLocaleLowerCase();\n    if (line.indexOf('-') === 0)\n        line = line.substr(1);\n    return line;\n}\n","let id = 0;\n\nexport default function uniqueId() {\n    return Math.random().toString(36).substr(3, 3) + Number(`${Date.now()}${++id}`).toString(36);\n}\n","export default function deepSet(data, idx, val) {\n    let _data = data, to;\n    (idx || '').split('.').forEach(v => {\n        if (to) {\n            if (!_data[to] || typeof _data[to] != 'object') {\n                _data[to] = {}\n            }\n            _data = _data[to];\n        }\n        to = v;\n    })\n    _data[to] = val;\n    return _data;\n}\n","import extend from '@form-create/utils/lib/extend';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport {_vue as Vue} from '../frame';\nimport {tip} from '@form-create/utils/lib/console';\nimport {invoke, mergeRule} from '../frame/util';\nimport toCase, {lower} from '@form-create/utils/lib/tocase';\nimport {$set, deepSet, toLine} from '@form-create/utils';\n\nexport default function useRender(Render) {\n    extend(Render.prototype, {\n        initRender() {\n            this.tempList = {};\n            this.clearOrgChildren();\n        },\n        initOrgChildren() {\n            const ctxs = this.$handle.ctxs;\n            this.orgChildren = Object.keys(ctxs).reduce((initial, id) => {\n                if (ctxs[id].parser.loadChildren !== false) {\n                    const children = ctxs[id].rule.children;\n                    initial[id] = is.trueArray(children) ? [...children] : [];\n                }\n\n                return initial;\n            }, {});\n\n        },\n        clearOrgChildren() {\n            this.orgChildren = {};\n        },\n        getTypeSlot(type) {\n            const name = 'type-' + toLine(type);\n            const _fn = (vm) => {\n                if (vm) {\n                    const slot = vm.$scopedSlots[name] || vm.$scopedSlots['type-' + type];\n                    if (slot) {\n                        return slot;\n                    }\n                    return _fn(vm.$pfc);\n                }\n            }\n            return _fn(this.vm);\n        },\n        render() {\n            if (!this.vm.isShow) {\n                return;\n            }\n            this.$h = this.vm.$createElement;\n            this.$manager.beforeRender();\n\n            let vn;\n\n            const make = () => this.renderList();\n            make.renderSlot = slot => this.renderList(slot);\n            make.renderName = name => this.renderId(name);\n            make.renderField = field => this.renderId(field, 'field');\n\n            if (this.vm.$scopedSlots.container) {\n                vn = [this.vm.$scopedSlots.container(make)];\n            } else {\n                vn = make();\n            }\n            return this.$manager.render(vn);\n        },\n        renderList(slot) {\n            return this.sort.map((id) => {\n                return slot ? this.renderSlot(this.$handle.ctxs[id], slot) : this.renderCtx(this.$handle.ctxs[id]);\n            }).filter((val) => val !== undefined);\n        },\n        makeVm(rule) {\n            const vm = rule.vm;\n            if (!vm)\n                return new Vue;\n            else if (is.Function(vm))\n                return invoke(() => rule.vm(this.$handle.getInjectData(rule)));\n            else if (!vm._isVue)\n                return new Vue(vm);\n            return vm;\n        },\n        mergeGlobal(ctx) {\n            const g = this.$handle.options.global;\n            if (!g) return;\n            //todo 缓存配置,更新 option 更新\n            if (!ctx.cacheConfig)\n                ctx.cacheConfig = g[ctx.originType] || g[ctx.type] || g[ctx.trueType] || {};\n            ctx.prop = mergeRule({}, [g['*'], ctx.cacheConfig, ctx.prop]);\n        },\n        setOptions(ctx) {\n            if (ctx.prop.optionsTo && ctx.prop.options) {\n                deepSet(ctx.prop, ctx.prop.optionsTo, ctx.prop.options);\n            }\n        },\n        deepSet(ctx) {\n            const deep = ctx.rule.deep;\n            deep && Object.keys(deep).sort((a, b) => a.length < b.length ? -1 : 1).forEach(str => {\n                deepSet(ctx.prop, str, deep[str]);\n            });\n        },\n        setTempProps(vm, ctx) {\n            if (!vm.$props) return;\n\n            const {prop} = ctx;\n            const keys = Object.keys(vm.$props);\n            const inject = this.injectProp(ctx);\n            const injectKeys = Object.keys(inject);\n\n            keys.forEach(key => {\n                if (hasProperty(prop.props, key))\n                    vm.$props[key] = prop.props[key];\n                else if (injectKeys.indexOf(key) > -1) vm.$props[key] = inject[key];\n            });\n\n            const key = (vm.$options.model && vm.$options.model.prop) || 'value';\n            if (keys.indexOf(key) > -1) {\n                vm.$props[key] = prop.value;\n            }\n        },\n        renderTemp(ctx) {\n            if (!Vue.compile) {\n                tip('当前使用的Vue构建版本不支持compile,无法使用template功能');\n                return [];\n            }\n            const rule = ctx.prop;\n            const {id, key} = ctx;\n\n            if (!this.tempList[id]) {\n                if (!ctx.el) {\n                    ctx.el = this.makeVm(rule);\n                    this.vm.$nextTick(() => ctx.parser.mounted(ctx));\n                }\n\n                let vm = ctx.el;\n                if (ctx.input)\n                    vm.$on((vm.$options.model && vm.$options.model.event) || 'input', (value) => {\n                        this.onInput(ctx, value);\n                    });\n\n                this.tempList[id] = {\n                    vm,\n                    template: Vue.compile(rule.template)\n                };\n            }\n\n            const {vm, template} = this.tempList[id];\n\n            this.setTempProps(vm, ctx);\n\n            const vn = template.render.call(vm);\n\n            if (is.Undef(vn.data)) vn.data = {};\n            vn.key = key;\n            vn.data.ref = ctx.ref;\n            vn.data.key = key;\n            return vn;\n        },\n        parseSide(side) {\n            return is.Object(side) ? mergeRule({}, side) : side;\n        },\n        renderSides(vn, ctx, temp) {\n            const prop = ctx[temp ? 'rule' : 'prop'];\n            return [this.renderRule(this.parseSide(prop.prefix)), vn, this.renderRule(this.parseSide(prop.suffix))];\n        },\n        renderSlot(ctx, slot) {\n            return ctx.rule.slot === slot ? this.renderCtx(ctx) : undefined;\n        },\n        renderId(name, type) {\n            const ctxs = this.$handle[type === 'field' ? 'fieldCtx' : 'nameCtx'][name]\n            return ctxs ? ctxs.map(ctx => this.renderCtx(ctx, ctx.parent)) : undefined;\n        },\n        renderCtx(ctx, parent) {\n            if (ctx.type === 'hidden') return;\n            const rule = ctx.rule;\n            if ((!this.cache[ctx.id]) || this.cache[ctx.id].slot !== rule.slot) {\n                let vn;\n                let cacheFlag = rule.cache !== false;\n                const _type = ctx.trueType;\n                const none = !(is.Undef(rule.display) || !!rule.display);\n                if (_type === 'template' && !rule.template) {\n                    vn = this.renderSides(this.renderChildren(ctx), ctx, true);\n                    if (none) {\n                        this.display(vn);\n                    }\n                    vn = this.item(ctx, vn);\n                } else if (_type === 'fcFragment') {\n                    vn = this.renderChildren(ctx);\n                } else {\n                    ctx.initProp();\n                    this.mergeGlobal(ctx);\n                    this.$manager.tidyRule(ctx);\n                    this.deepSet(ctx);\n                    this.setOptions(ctx);\n                    this.ctxProp(ctx);\n                    let prop = ctx.prop;\n                    prop.preview = !!(hasProperty(prop, 'preview') ? prop.preview : (this.options.preview || false))\n                    prop.props.formCreateInject = this.injectProp(ctx);\n                    const preview = prop.preview;\n\n                    if (prop.hidden) {\n                        this.setCache(ctx, undefined, parent);\n                        return;\n                    }\n\n                    if (_type === 'template' && prop.template) {\n                        vn = this.renderTemp(ctx);\n                        cacheFlag = false;\n                    } else {\n                        let children = [];\n                        if (ctx.parser.renderChildren) {\n                            children = ctx.parser.renderChildren(ctx);\n                        } else if (ctx.parser.loadChildren !== false) {\n                            children = this.renderChildren(ctx);\n                        }\n                        const slot = this.getTypeSlot(ctx.type);\n                        if (slot) {\n                            vn = slot({\n                                rule,\n                                prop,\n                                preview,\n                                children,\n                                api: this.$handle.api,\n                                model: prop.model || {}\n                            });\n                        } else {\n                            vn = preview ? ctx.parser.preview(children, ctx) : ctx.parser.render(children, ctx);\n                        }\n                    }\n                    vn = this.renderSides(vn, ctx);\n                    if ((!(!ctx.input && is.Undef(prop.native))) && prop.native !== true) {\n                        vn = this.$manager.makeWrap(ctx, vn);\n                    }\n                    if (none) {\n                        vn = this.display(vn);\n                    }\n                    vn = this.item(ctx, vn)\n                }\n                if (cacheFlag) {\n                    this.setCache(ctx, vn, parent);\n                }\n                return vn;\n            }\n\n            return this.getCache(ctx);\n        },\n        display(vn) {\n            if (Array.isArray(vn)) {\n                const data = [];\n                vn.forEach(v => {\n                    if (Array.isArray(v)) return this.display(v);\n                    if (this.none(v)) data.push(v);\n                })\n                return data;\n            } else {\n                return this.none(vn);\n            }\n        },\n        none(vn) {\n            if (vn && vn.data) {\n                if (Array.isArray(vn.data.style)) {\n                    vn.data.style.push({display: 'none'});\n                } else {\n                    vn.data.style = [vn.data.style, {display: 'none'}];\n                }\n                return vn;\n            }\n        },\n        item(ctx, vn) {\n            return this.$h('fcFragment', {\n                slot: ctx.rule.slot,\n                key: ctx.key,\n            }, [vn]);\n        },\n        injectProp(ctx) {\n            if (!this.vm.ctxInject[ctx.id]) {\n                $set(this.vm.ctxInject, ctx.id, {\n                    api: this.$handle.api,\n                    form: this.fc.create,\n                    subForm: subForm => {\n                        this.$handle.addSubForm(ctx, subForm);\n                    },\n                    getSubForm: () => {\n                        return this.$handle.subForm[ctx.id];\n                    },\n                    options: [],\n                    children: [],\n                    prop: {},\n                    preview: false,\n                    field: ctx.field,\n                    rule: ctx.rule,\n                    input: ctx.input,\n                });\n            }\n            const inject = this.vm.ctxInject[ctx.id];\n            extend(inject, {\n                preview: ctx.prop.preview,\n                options: ctx.prop.options,\n                children: ctx.rule.children,\n                prop: (function () {\n                    const temp = {...ctx.prop};\n                    temp.on = temp.on ? {...temp.on} : {};\n                    delete temp.model;\n                    return temp;\n                }()),\n            });\n            return inject;\n        },\n        ctxProp(ctx, custom) {\n            const {ref, key, rule} = ctx;\n            this.$manager.mergeProp(ctx, custom);\n            ctx.parser.mergeProp(ctx, custom);\n            const props = [\n                {\n                    ref: ref,\n                    key: rule.key || `${key}fc`,\n                    slot: undefined,\n                    on: {\n                        'hook:mounted': () => {\n                            this.onMounted(ctx);\n                        },\n                        'fc.sub-form': (subForm) => {\n                            this.$handle.addSubForm(ctx, subForm);\n                        }\n                    },\n                }\n            ]\n\n            if (!custom && ctx.input) {\n                ctx.prop.model = {\n                    value: this.$handle.getFormData(ctx),\n                    callback: (value) => {\n                        this.onInput(ctx, value);\n                    },\n                    expression: `formData.${ctx.id}`\n                };\n            }\n            mergeProps(props, ctx.prop);\n            return ctx.prop;\n        },\n        onMounted(ctx) {\n            ctx.el = this.vm.$refs[ctx.ref];\n            if (ctx.el) {\n                (ctx.el.$el || ctx.el).__rule__ = ctx.rule;\n            }\n            ctx.parser.mounted(ctx);\n            this.$handle.effect(ctx, 'mounted');\n        },\n        onInput(ctx, value) {\n            this.$handle.onInput(ctx, value);\n        },\n        renderChildren(ctx) {\n            const {children} = ctx.rule, orgChildren = this.orgChildren[ctx.id];\n\n            const isRm = child => {\n                return !is.String(child) && child.__fc__ && !this.$handle.ctxs[child.__fc__.id];\n            }\n\n            if (!is.trueArray(children) && orgChildren) {\n                this.$handle.deferSyncValue(() => {\n                    orgChildren.forEach(child => {\n                        if (!child) return;\n                        if (isRm(child)) {\n                            this.$handle.rmCtx(child.__fc__);\n                        }\n                    });\n                });\n                this.orgChildren[ctx.id] = [];\n                return [];\n            }\n\n            orgChildren && this.$handle.deferSyncValue(() => {\n                orgChildren.forEach(child => {\n                    if (!child) return;\n                    if (children.indexOf(child) === -1 && isRm(child)) {\n                        this.$handle.rmCtx(child.__fc__);\n                    }\n                });\n            });\n\n            return children.map(child => {\n                if (!child) return;\n                if (is.String(child)) return child;\n                if (child.__fc__) {\n                    return this.renderCtx(child.__fc__, ctx);\n                }\n                if (child.type) {\n                    this.vm.$nextTick(() => {\n                        this.$handle.loadChildren(children, ctx);\n                        this.$handle.refresh();\n                    });\n                }\n            });\n\n        },\n        defaultRender(ctx, children) {\n            const prop = ctx.prop;\n            if(prop.component)\n                return this.vNode.makeComponent(prop.component, prop, children)\n            if (this.vNode[ctx.type])\n                return this.vNode[ctx.type](prop, children);\n            if (this.vNode[ctx.originType])\n                return this.vNode[ctx.originType](prop, children);\n            return this.vNode.make(lower(ctx.originType), prop, children);\n        },\n        renderRule(rule, children, origin) {\n            if (!rule) return undefined;\n            if (is.String(rule)) return rule;\n\n            let type;\n            if (origin) {\n                type = rule.type;\n            } else {\n                type = rule.is;\n                if (rule.type) {\n                    type = toCase(rule.type);\n                    const alias = this.vNode.aliasMap[type];\n                    if (alias) type = toCase(alias);\n                }\n            }\n\n            if (!type) return undefined;\n            let data = [[children]];\n            if (is.trueArray(rule.children)) {\n                data.push(rule.children.map(v => this.renderRule(v)));\n            }\n            return this.$h(type, {...rule}, data);\n        }\n    })\n}\n","import useCache from './cache';\nimport useRender from './render';\nimport extend from '@form-create/utils/lib/extend';\nimport {funcProxy} from '../frame/util';\n\nexport default function Render(handle) {\n    extend(this, {\n        $handle: handle,\n        fc: handle.fc,\n        vm: handle.vm,\n        $manager: handle.$manager,\n        vNode: new handle.fc.CreateNode(handle.vm),\n    });\n\n    funcProxy(this, {\n        options() {\n            return handle.options;\n        },\n        sort() {\n            return handle.sort;\n        }\n    })\n\n    this.initCache();\n    this.initRender();\n}\n\nuseCache(Render);\nuseRender(Render)\n","import extend from '@form-create/utils/lib/extend';\nimport is from '@form-create/utils/lib/type';\nimport toLine from '@form-create/utils/lib/toline';\nimport {parseFn} from '../frame/util';\n\n\nexport default function useInject(Handler) {\n    extend(Handler.prototype, {\n        parseInjectEvent(rule, on) {\n            const inject = rule.inject || this.options.injectEvent;\n            return this.parseEventLst(rule, on, inject);\n        },\n        parseEventLst(rule, data, inject, deep) {\n            Object.keys(data).forEach(k => {\n                const fn = this.parseEvent(rule, data[k], inject, deep);\n                if (fn) {\n                    data[k] = fn;\n                }\n            });\n            return data;\n        },\n        parseEvent(rule, fn, inject, deep) {\n            if (is.Function(fn) && ((inject !== false && !is.Undef(inject)) || fn.__inject)) {\n                return this.inject(rule, fn, inject)\n            } else if (!deep && Array.isArray(fn) && fn[0] && (is.String(fn[0]) || is.Function(fn[0]))) {\n                return this.parseEventLst(rule, fn, inject, true);\n            } else if (is.String(fn)) {\n                const val = parseFn(fn);\n                if (val && fn !== val) {\n                    return val.__inject ? this.parseEvent(rule, val, inject, true) : val;\n                }\n            }\n        },\n        parseEmit(ctx, on) {\n            let event = {}, rule = ctx.rule, {emitPrefix, field, name, inject} = rule;\n            let emit = rule[on ? 'emit' : 'nativeEmit'] || [];\n            if (is.trueArray(emit)) {\n                let emitKey = emitPrefix || field || name;\n                if (emitKey) {\n                    if (!on) emitKey = `native-${emitKey}`;\n                    emit.forEach(eventName => {\n                        if (!eventName) return;\n                        let eventInject;\n                        if (is.Object(eventName)) {\n                            eventInject = eventName.inject;\n                            eventName = eventName.name;\n                        }\n                        const fieldKey = toLine(`${emitKey}-${eventName}`);\n                        const fn = (...arg) => {\n                            this.vm.$emit(fieldKey, ...arg);\n                            this.vm.$emit('emit-event', fieldKey, ...arg);\n                        };\n                        fn.__emit = true;\n\n                        if (!eventInject && inject === false) {\n                            event[eventName] = fn;\n                        } else {\n                            let _inject = eventInject || inject || this.options.injectEvent;\n                            event[eventName] = is.Undef(_inject) ? fn : this.inject(rule, fn, _inject);\n                        }\n                    });\n                }\n\n            }\n            ctx.computed[on ? 'on' : 'nativeOn'] = event;\n            return event;\n        },\n        getInjectData(self, inject) {\n            const {option, rule} = this.vm.$options.propsData;\n            return {\n                api: this.api,\n                $f: this.api,\n                rule,\n                self: self.__origin__,\n                option,\n                inject\n            };\n        },\n        inject(self, _fn, inject) {\n            if (_fn.__origin) {\n                if (this.watching && !this.loading)\n                    return _fn;\n                _fn = _fn.__origin;\n            }\n\n            const h = this;\n\n            const fn = function (...args) {\n                const data = h.getInjectData(self, inject);\n                data.args = [...args];\n                args.unshift(data);\n                return _fn.apply(this, args);\n            };\n            fn.__origin = _fn;\n            fn.__json = _fn.__json;\n            return fn;\n        },\n    })\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is from '@form-create/utils/lib/type';\n\nconst EVENT = ['hook:updated', 'hook:mounted'];\n\nexport default function usePage(Handler) {\n    extend(Handler.prototype, {\n        usePage() {\n            const page = this.options.page;\n            if (!page) return;\n            let first = 25;\n            let limit = getLimit(this.rules);\n            if (is.Object(page)) {\n                if (page.first) first = parseInt(page.first, 10) || first;\n                if (page.limit) limit = parseInt(page.limit, 10) || limit;\n            }\n            extend(this, {\n                first,\n                limit,\n                pageEnd: this.rules.length <= first,\n            })\n\n            this.bus.$on('page-end', () => this.vm.$emit('page-end', this.api));\n            this.pageLoad();\n        },\n        pageLoad() {\n            const pageFn = () => {\n                if (this.pageEnd) {\n                    this.vm.$off(EVENT, pageFn);\n                    this.bus.$emit('page-end');\n                } else {\n                    this.first += this.limit;\n                    this.pageEnd = this.rules.length <= this.first;\n                    this.loadRule();\n                    this.refresh();\n                }\n            }\n            this.vm.$on(EVENT, pageFn);\n        },\n    })\n}\n\n\nfunction getLimit(rules) {\n    return rules.length < 31 ? 31 : Math.ceil(rules.length / 3);\n}\n","import extend from '@form-create/utils/lib/extend';\n\n\nexport default function useRender(Handler) {\n    extend(Handler.prototype, {\n        clearNextTick() {\n            this.nextTick && clearTimeout(this.nextTick);\n            this.nextTick = null;\n        },\n        bindNextTick(fn) {\n            this.clearNextTick();\n            this.nextTick = setTimeout(() => {\n                fn()\n                this.nextTick = null;\n            }, 10);\n        },\n        render() {\n            // console.warn('%c render', 'color:green');\n            ++this.loadedId;\n\n            if (this.vm.unique > 0)\n                return this.$render.render();\n            else {\n                this.vm.unique = 1;\n                return [];\n            }\n        },\n    });\n}\n","import unique from '@form-create/utils/lib/unique';\nimport toCase from '@form-create/utils/lib/tocase';\nimport extend from '@form-create/utils/lib/extend';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\nimport {enumerable} from '../frame/util';\nimport {deepCopy} from '@form-create/utils/lib/deepextend';\n\nfunction bind(ctx) {\n    Object.defineProperties(ctx.origin, {\n        __fc__: enumerable(ctx, true)\n    });\n}\n\nexport default function RuleContext(handle, rule) {\n    const id = unique();\n\n    extend(this, {\n        id,\n        ref: id,\n        wrapRef: id + 'fi',\n        rule,\n        origin: rule.__origin__ || rule,\n        name: rule.name,\n\n        watch: [],\n        linkOn: [],\n        root: [],\n        ctrlRule: [],\n        parent: null,\n        cacheConfig: null,\n        prop: {...rule},\n        computed: {},\n        payload: {},\n        input: !!rule.field,\n        el: undefined,\n        defaultValue: rule.field ? deepCopy(rule.value) : undefined,\n        field: rule.field || undefined,\n    })\n\n    this.updateType();\n    this.updateKey();\n    bind(this);\n    this.update(handle, true);\n}\n\nextend(RuleContext.prototype, {\n    effectData(name) {\n        if (!this.payload[name]) {\n            this.payload[name] = {};\n        }\n        return this.payload[name];\n    },\n    clearEffectData(name) {\n        delete this.payload[name]\n    },\n    updateKey(flag) {\n        this.key = unique();\n        flag && this.parent && this.parent.updateKey(flag);\n    },\n    updateType() {\n        this.originType = this.rule.type;\n        this.type = toCase(this.rule.type);\n    },\n    setParser(parser) {\n        this.parser = parser;\n        parser.init(this);\n    },\n    initProp() {\n        const rule = {...this.rule};\n        delete rule.children;\n        this.prop = mergeProps([rule, ...Object.keys(this.payload).map(k => this.payload[k]), this.computed]);\n    },\n    check(handle) {\n        return this.vm === handle.vm\n    },\n    unwatch() {\n        this.watch.forEach(un => un());\n        this.watch = [];\n    },\n    unlink() {\n        this.linkOn.forEach(un => un());\n        this.linkOn = [];\n    },\n    link() {\n        this.unlink();\n        this.$handle.appendLink(this);\n    },\n    watchTo() {\n        this.$handle.watchCtx(this);\n    },\n    delete() {\n        const undef = void 0;\n        this.unwatch();\n        this.unlink();\n        this.rmCtrl();\n        extend(this, {\n            deleted: true,\n            prop: {...this.rule},\n            computed: {},\n            el: undef,\n            $handle: undef,\n            $render: undef,\n            $api: undef,\n            vm: undef,\n            vNode: undef,\n            parent: null,\n            cacheConfig: null,\n        })\n    },\n    rmCtrl() {\n        this.ctrlRule.forEach(ctrl => ctrl.__fc__ && ctrl.__fc__.rm());\n        this.ctrlRule = [];\n    },\n    rm() {\n        const _rm = () => {\n            let index = this.root.indexOf(this.origin);\n            if (index > -1) {\n                this.root.splice(index, 1);\n                this.$handle && this.$handle.refresh();\n            }\n        }\n        if (this.deleted) {\n            _rm();\n            return;\n        }\n        this.$handle.noWatch(() => {\n            this.$handle.deferSyncValue(() => {\n                this.rmCtrl();\n                _rm();\n                this.$handle.rmCtx(this);\n                extend(this, {\n                    root: []\n                });\n            }, this.input);\n        });\n    },\n    update(handle, init) {\n        extend(this, {\n            deleted: false,\n            $handle: handle,\n            $render: handle.$render,\n            $api: handle.api,\n            vm: handle.vm,\n            trueType: handle.getType(this.originType),\n            vNode: handle.$render.vNode,\n            updated: false,\n        });\n        !init && this.unwatch();\n        this.watchTo();\n        this.link();\n    }\n})\n","import extend from '@form-create/utils/lib/extend';\nimport {byCtx, copyRule, enumerable, getRule, invoke, parseFn} from '../frame/util';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport {err} from '@form-create/utils/lib/console';\nimport {baseRule} from '../factory/creator';\nimport RuleContext from '../factory/context';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\nimport {$set} from '@form-create/utils';\n\nexport default function useLoader(Handler) {\n    extend(Handler.prototype, {\n        nextRefresh(fn) {\n            const id = this.loadedId;\n            this.vm.$nextTick(() => {\n                id === this.loadedId && (fn ? fn() : this.refresh());\n            });\n        },\n        parseRule(_rule) {\n            const rule = getRule(_rule);\n\n            Object.defineProperties(rule, {\n                __origin__: enumerable(_rule, true)\n            });\n\n            fullRule(rule);\n            this.appendValue(rule);\n\n            rule.options = Array.isArray(rule.options) ? rule.options : [];\n\n            [rule, rule['prefix'], rule['suffix']].forEach(item => {\n                if (!item) {\n                    return;\n                }\n                this.loadFn(item, rule);\n            });\n            this.loadCtrl(rule);\n            if (rule.update) {\n                rule.update = parseFn(rule.update);\n            }\n            return rule;\n        },\n        loadFn(item, rule) {\n            ['on', 'props', 'nativeOn', 'deep'].forEach(k => {\n                item[k] && this.parseInjectEvent(rule, item[k]);\n            });\n        },\n        loadCtrl(rule) {\n            rule.control && rule.control.forEach(ctrl => {\n                if (ctrl.handle) {\n                    ctrl.handle = parseFn(ctrl.handle)\n                }\n            })\n        },\n        syncProp(ctx) {\n            const rule = ctx.rule;\n            is.trueArray(rule.sync) && mergeProps([{\n                on: rule.sync.reduce((pre, prop) => {\n                    pre[`update:${prop}`] = (val) => {\n                        rule.props[prop] = val;\n                        this.vm.$emit('sync', prop, val, rule, this.fapi);\n                    }\n                    return pre\n                }, {})\n            }], ctx.computed)\n        },\n        loadRule() {\n            // console.warn('%c load', 'color:blue');\n            this.cycleLoad = false;\n            this.loading = true;\n            if (this.pageEnd) {\n                this.bus.$emit('load-start');\n            }\n            this.deferSyncValue(() => {\n                this._loadRule(this.rules);\n                this.loading = false;\n                if (this.cycleLoad && this.pageEnd) {\n                    return this.loadRule();\n                }\n                if (this.pageEnd) {\n                    this.bus.$emit('load-end');\n                }\n                this.vm._renderRule();\n                this.$render.initOrgChildren();\n                this.syncForm();\n            });\n        },\n        loadChildren(children, parent) {\n            this.cycleLoad = false;\n            this.loading = true;\n            this.bus.$emit('load-start');\n            this._loadRule(children, parent);\n            this.loading = false;\n            if (this.cycleLoad) {\n                return this.loadRule();\n            } else {\n                this.bus.$emit('load-end');\n                this.syncForm();\n            }\n            this.$render.clearCache(parent);\n        },\n        _loadRule(rules, parent) {\n\n            const preIndex = (i) => {\n                let pre = rules[i - 1];\n                if (!pre || !pre.__fc__) {\n                    return i > 0 ? preIndex(i - 1) : -1;\n                }\n                let index = this.sort.indexOf(pre.__fc__.id);\n                return index > -1 ? index : preIndex(i - 1);\n            }\n\n            const loadChildren = (children, parent) => {\n                if (is.trueArray(children)) {\n                    this._loadRule(children, parent);\n                }\n            };\n\n            rules.map((_rule, index) => {\n                if (parent && (is.String(_rule) || is.Undef(_rule))) return;\n                if (!this.pageEnd && !parent && index >= this.first) return;\n\n                if (!is.Object(_rule) || !getRule(_rule).type)\n                    return err('未定义生成规则的 type 字段', _rule);\n\n                if (_rule.__fc__ && _rule.__fc__.root === rules && this.ctxs[_rule.__fc__.id]) {\n                    loadChildren(_rule.__fc__.rule.children, _rule.__fc__);\n                    return _rule.__fc__;\n                }\n\n                let rule = getRule(_rule);\n\n                const isRepeat = () => {\n                    return !!(rule.field && this.fieldCtx[rule.field] && this.fieldCtx[rule.field][0] !== _rule.__fc__)\n                }\n\n                this.ruleEffect(rule, 'init', {repeat: isRepeat()});\n\n                if (isRepeat()) {\n                    this.vm.$emit('repeat-field', _rule, this.api);\n                }\n\n                let ctx;\n                let isCopy = false;\n                let isInit = !!_rule.__fc__;\n                if (isInit) {\n                    ctx = _rule.__fc__;\n                    const check = !ctx.check(this);\n                    if (ctx.deleted) {\n                        if (check) {\n                            if (isCtrl(ctx)) {\n                                return;\n                            }\n                            ctx.update(this);\n                        }\n                    } else {\n                        if (check) {\n                            if (isCtrl(ctx)) {\n                                return;\n                            }\n                            rules[index] = _rule = _rule._clone ? _rule._clone() : copyRule(_rule);\n                            ctx = null;\n                            isCopy = true;\n                        }\n                    }\n                }\n                if (!ctx) {\n                    ctx = new RuleContext(this, this.parseRule(_rule));\n                    this.bindParser(ctx);\n                } else {\n                    if (ctx.originType !== ctx.rule.type) {\n                        ctx.updateType();\n                        this.bindParser(ctx);\n                    }\n                    this.appendValue(ctx.rule);\n                }\n                [false, true].forEach(b => this.parseEmit(ctx, b));\n                this.syncProp(ctx);\n                ctx.parent = parent || null;\n                ctx.root = rules;\n                this.setCtx(ctx);\n\n                !isCopy && !isInit && this.effect(ctx, 'load');\n\n                ctx.parser.loadChildren === false || loadChildren(ctx.rule.children, ctx);\n\n                if (!parent) {\n                    const _preIndex = preIndex(index);\n                    if (_preIndex > -1 || !index) {\n                        this.sort.splice(_preIndex + 1, 0, ctx.id);\n                    } else {\n                        this.sort.push(ctx.id);\n                    }\n                }\n\n                const r = ctx.rule;\n                if (!ctx.updated) {\n                    ctx.updated = true;\n                    if (is.Function(r.update)) {\n                        this.bus.$once('load-end', () => {\n                            this.refreshUpdate(ctx, r.value);\n                        });\n                    }\n                    this.effect(ctx, 'loaded');\n                }\n\n                if (ctx.input)\n                    Object.defineProperty(r, 'value', this.valueHandle(ctx));\n                if (this.refreshControl(ctx)) this.cycleLoad = true;\n                return ctx;\n            });\n        },\n        refreshControl(ctx) {\n            return ctx.input && ctx.rule.control && this.useCtrl(ctx);\n        },\n        useCtrl(ctx) {\n            const controls = getCtrl(ctx), validate = [], api = this.api;\n            if (!controls.length) return false;\n\n            for (let i = 0; i < controls.length; i++) {\n                const control = controls[i], handleFn = control.handle || (val => val === control.value);\n                if (!is.trueArray(control.rule)) continue;\n                const data = {\n                    ...control,\n                    valid: invoke(() => handleFn(ctx.rule.value, api)),\n                    ctrl: findCtrl(ctx, control.rule),\n                    isHidden: is.String(control.rule[0]),\n                };\n                if ((data.valid && data.ctrl) || (!data.valid && !data.ctrl && !data.isHidden)) continue;\n                validate.push(data);\n            }\n            if (!validate.length) return false;\n\n            let flag = false;\n            this.deferSyncValue(() => {\n                validate.reverse().forEach(({isHidden, valid, rule, prepend, append, child, ctrl}) => {\n                    if (isHidden) {\n                        valid ? ctx.ctrlRule.push({\n                            __ctrl: true,\n                            children: rule,\n                            valid\n                        })\n                            : ctx.ctrlRule.splice(ctx.ctrlRule.indexOf(ctrl), 1);\n                        this.vm.$nextTick(() => {\n                            this.api.hidden(!valid, rule);\n                        });\n                        return;\n                    }\n                    if (valid) {\n                        flag = true;\n                        const ruleCon = {\n                            type: 'fcFragment',\n                            native: true,\n                            __ctrl: true,\n                            children: rule,\n                        }\n                        ctx.ctrlRule.push(ruleCon);\n                        this.bus.$once('load-start', () => {\n                            // this.cycleLoad = true;\n                            if (prepend) {\n                                api.prepend(ruleCon, prepend, child)\n                            } else if (append || child) {\n                                api.append(ruleCon, append || ctx.id, child)\n                            } else {\n                                ctx.root.splice(ctx.root.indexOf(ctx.origin) + 1, 0, ruleCon);\n                            }\n                        });\n                    } else {\n                        ctx.ctrlRule.splice(ctx.ctrlRule.indexOf(ctrl), 1);\n                        const ctrlCtx = byCtx(ctrl);\n                        ctrlCtx && ctrlCtx.rm();\n                    }\n                });\n            });\n            this.vm.$emit('control', ctx.origin, this.api);\n            this.effect(ctx, 'control');\n            return flag;\n        },\n        reloadRule(rules) {\n            return this._reloadRule(rules);\n        },\n        _reloadRule(rules) {\n            // console.warn('%c reload', 'color:red');\n            if (!rules) rules = this.rules;\n\n            const ctxs = {...this.ctxs};\n\n            this.clearNextTick();\n            this.$render.clearOrgChildren();\n            this.initData(rules);\n            this.fc.rules = rules;\n            this.deferSyncValue(() => {\n                this.bus.$once('load-end', () => {\n                    Object.keys(ctxs).filter(id => this.ctxs[id] === undefined)\n                        .forEach(id => this.rmCtx(ctxs[id]));\n                    this.$render.clearCacheAll();\n                });\n                this.reloading = true;\n                this.loadRule();\n                this.reloading = false;\n                this.refresh();\n                this.vm.$emit('reload', this.api);\n            });\n            this.bus.$off('next-tick', this.nextReload);\n            this.bus.$once('next-tick', this.nextReload);\n            this.vm.$emit('update', this.api);\n        },\n        //todo 组件生成全部通过 alias\n        refresh() {\n            this.vm._refresh();\n        },\n    });\n}\n\nfunction fullRule(rule) {\n    const def = baseRule();\n\n    Object.keys(def).forEach(k => {\n        if (!hasProperty(rule, k)) $set(rule, k, def[k]);\n    });\n    return rule;\n}\n\nfunction getCtrl(ctx) {\n    const control = ctx.rule.control || [];\n    if (is.Object(control)) return [control];\n    else return control;\n}\n\nfunction findCtrl(ctx, rule) {\n    for (let i = 0; i < ctx.ctrlRule.length; i++) {\n        const ctrl = ctx.ctrlRule[i];\n        if (ctrl.children === rule)\n            return ctrl;\n    }\n}\n\nfunction isCtrl(ctx) {\n    return !!ctx.rule.__ctrl;\n}\n","import extend from '@form-create/utils/lib/extend';\nimport {$set} from '@form-create/utils/lib/modify';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport {invoke} from '../frame/util';\nimport toArray from '@form-create/utils/lib/toarray';\n\nexport default function useInput(Handler) {\n    extend(Handler.prototype, {\n        getValue(ctx) {\n            if (is.Undef(ctx.cacheValue)) {\n                ctx.cacheValue = ctx.parser.toValue(this.getFormData(ctx), ctx);\n            }\n            return ctx.cacheValue;\n        },\n        setValue(ctx, value, formValue, setFlag) {\n            if (ctx.deleted) return;\n            ctx.cacheValue = value;\n            this.changeStatus = true;\n            this.nextRefresh();\n            this.$render.clearCache(ctx);\n            this.setFormData(ctx, formValue);\n            this.syncValue();\n            this.valueChange(ctx, value);\n            this.vm.$emit('change', ctx.field, value, ctx.origin, this.api, setFlag || false);\n            this.effect(ctx, 'value');\n        },\n        onInput(ctx, value) {\n            let val;\n            if (ctx.input && (this.isQuote(ctx, val = ctx.parser.toValue(value, ctx)) || this.isChange(ctx, val))) {\n                this.setValue(ctx, val, value);\n            }\n        },\n        setFormData(ctx, value) {\n            $set(this.formData, ctx.id, value === null ? undefined : value);\n        },\n        getFormData(ctx) {\n            return this.formData[ctx.id];\n        },\n        validate() {\n            toEmpty(this.vm.validate);\n            this.fields().forEach(id => {\n                this.fieldCtx[id].forEach(ctx => {\n                    this.vm.validate[ctx.id] = toArray(ctx.rule.validate);\n                });\n            });\n            return this.vm.validate;\n        },\n        syncForm() {\n            toEmpty(this.form);\n            Object.defineProperties(this.form, this.fields().reduce((initial, field) => {\n                const ctx = this.getFieldCtx(field);\n                const handle = this.valueHandle(ctx);\n                handle.configurable = true;\n                initial[field] = handle;\n                return initial;\n            }, this.options.appendValue ? Object.keys(this.appendData).reduce((initial, field) => {\n                initial[field] = {\n                    enumerable: true,\n                    configurable: true,\n                    get: () => {\n                        return this.appendData[field];\n                    },\n                    set: (val) => {\n                        this.appendData[field] = val;\n                    }\n                }\n                return initial;\n            }, {}) : {}));\n            this.syncValue();\n        },\n        valueHandle(ctx) {\n            return {\n                enumerable: true,\n                get: () => {\n                    return this.getValue(ctx);\n                },\n                set: (value) => {\n                    if (this.isChange(ctx, value)) {\n                        this.setValue(ctx, value, ctx.parser.toFormValue(value, ctx), true);\n                    }\n                }\n            };\n        },\n        appendValue(rule) {\n            if (!rule.field || !hasProperty(this.appendData, rule.field)) return;\n            rule.value = this.appendData[rule.field];\n            delete this.appendData[rule.field];\n        },\n        addSubForm(ctx, subForm) {\n            this.subForm[ctx.id] = subForm;\n        },\n        deferSyncValue(fn, sync) {\n            if (!this.deferSyncFn) {\n                this.deferSyncFn = fn;\n            }\n            if (!this.deferSyncFn.sync) {\n                this.deferSyncFn.sync = sync;\n            }\n            invoke(fn);\n            if (this.deferSyncFn === fn) {\n                this.deferSyncFn = null;\n                if (fn.sync) {\n                    this.syncValue();\n                }\n            }\n        },\n        syncValue() {\n            if (this.deferSyncFn) {\n                return this.deferSyncFn.sync = true;\n            }\n            this.vm._updateValue({...this.form});\n        },\n        isChange(ctx, value) {\n            return JSON.stringify(ctx.rule.value, strFn) !== JSON.stringify(value === null ? undefined : value, strFn);\n        },\n        isQuote(ctx, value) {\n            return (is.Object(value) || Array.isArray(value)) && value === ctx.rule.value;\n        },\n        refreshUpdate(ctx, val) {\n            if (is.Function(ctx.rule.update)) {\n                const state = invoke(() => ctx.rule.update(val, ctx.origin, this.api));\n                if (state === undefined) return;\n                ctx.rule.hidden = state === true;\n            }\n        },\n        valueChange(ctx, val) {\n            this.refreshRule(ctx, val);\n            this.bus.$emit('change-' + ctx.field, val);\n        },\n        refreshRule(ctx, val) {\n            if (this.refreshControl(ctx)) {\n                this.$render.clearCacheAll();\n                this.loadRule();\n                this.vm.$emit('update', this.api);\n                this.refresh();\n            }\n            this.refreshUpdate(ctx, val);\n        },\n        appendLink(ctx) {\n            const link = ctx.rule.link;\n            is.trueArray(link) && link.forEach(field => {\n                const fn = () => this.refreshRule(ctx, ctx.rule.value);\n\n                this.bus.$on('change-' + field, fn);\n                ctx.linkOn.push(() => this.bus.$off('change-' + field, fn));\n            });\n        },\n        fields() {\n            return Object.keys(this.fieldCtx);\n        },\n    });\n}\n\n\nfunction strFn(key, val) {\n    return typeof val === 'function' ? '' + val : val;\n}\n\nfunction toEmpty(obj) {\n    Object.keys(obj).forEach(k => delete obj[k]);\n}\n","const BaseParser = {\n    init(ctx) {\n    },\n    toFormValue(value, ctx) {\n        return value\n    },\n    toValue(formValue, ctx) {\n        return formValue;\n    },\n    mounted(ctx) {\n    },\n    render(children, ctx) {\n        return ctx.$render.defaultRender(ctx, children);\n    },\n    preview(children, ctx) {\n        return this.render(children, ctx);\n    },\n    mergeProp(ctx) {\n    }\n}\n\nexport default BaseParser;\n","import extend from '@form-create/utils/lib/extend';\nimport toCase from '@form-create/utils/lib/tocase';\nimport BaseParser from '../factory/parser';\nimport {$del} from '@form-create/utils/lib/modify';\nimport is from '@form-create/utils/lib/type';\nimport {invoke} from '../frame/util';\n\nconst noneKey = ['field', 'value', 'vm', 'template', 'name', 'config', 'control', 'inject', 'sync', 'payload', 'optionsTo', 'update', 'component', 'cache'];\n\nexport default function useContext(Handler) {\n    extend(Handler.prototype, {\n        getCtx(id) {\n            return this.getFieldCtx(id) || this.getNameCtx(id)[0] || this.ctxs[id];\n        },\n        getCtxs(id) {\n            return this.fieldCtx[id] || this.nameCtx[id] || (this.ctxs[id] ? [this.ctxs[id]] : []);\n        },\n        setIdCtx(ctx, key, type) {\n            const field = `${type}Ctx`;\n            if (!this[field][key]) {\n                this[field][key] = [ctx];\n            } else {\n                this[field][key].push(ctx);\n            }\n        },\n        rmIdCtx(ctx, key, type) {\n            const field = `${type}Ctx`;\n            const lst = this[field][key];\n            if (!lst) return false;\n            const flag = lst.splice(lst.indexOf(ctx) >>> 0, 1).length > 0;\n            if (!lst.length) {\n                delete this[field][key];\n            }\n            return flag;\n        },\n        getFieldCtx(field) {\n            return (this.fieldCtx[field] || [])[0];\n        },\n        getNameCtx(name) {\n            return this.nameCtx[name] || [];\n        },\n        setCtx(ctx) {\n            let {id, field, name, rule} = ctx;\n            this.ctxs[id] = ctx;\n            name && this.setIdCtx(ctx, name, 'name');\n            if (!ctx.input) return;\n            this.setIdCtx(ctx, field, 'field');\n            this.setFormData(ctx, ctx.parser.toFormValue(rule.value, ctx));\n            if (this.isMounted && !this.reloading) {\n                this.vm.$emit('change', ctx.field, rule.value, ctx.origin, this.api);\n            }\n        },\n        getParser(ctx) {\n            const list = this.fc.parsers;\n            return list[ctx.originType] || list[toCase(ctx.type)] || list[ctx.trueType] || BaseParser;\n        },\n        bindParser(ctx) {\n            ctx.setParser(this.getParser(ctx));\n        },\n        getType(alias) {\n            const map = this.fc.CreateNode.aliasMap;\n            const type = map[alias] || map[toCase(alias)] || alias;\n            return toCase(type);\n        },\n        noWatch(fn) {\n            if (!this.noWatchFn) {\n                this.noWatchFn = fn;\n            }\n            invoke(fn);\n            if (this.noWatchFn === fn) {\n                this.noWatchFn = null;\n            }\n        },\n        watchCtx(ctx) {\n            const vm = this.vm;\n            Object.keys(ctx.rule).filter(k => k[0] !== '_' && k[0] !== '$' && noneKey.indexOf(k) === -1).forEach((key) => {\n                const flag = key === 'children';\n                ctx.watch.push(vm.$watch(() => ctx.rule[key], (n, o) => {\n                    if (this.loading || this.noWatchFn || this.reloading) return;\n                    if (flag && ctx.parser.loadChildren === false) {\n                        this.$render.clearCache(ctx);\n                        this.nextRefresh();\n                        return;\n                    }\n                    this.watching = true;\n                    // if (key === 'hidden')\n                    //     ctx.updateKey(true);\n                    // else\n                    if (key === 'link') {\n                        ctx.link();\n                        return;\n                    } else if (['props', 'on', 'nativeOn', 'deep'].indexOf(key) > -1) {\n                        this.parseInjectEvent(ctx.rule, n || {});\n                        if (key === 'props' && ctx.input) {\n                            this.setFormData(ctx, ctx.parser.toFormValue(ctx.rule.value, ctx));\n                        }\n                    } else if (['emit', 'nativeEmit'].indexOf(key) > -1)\n                        this.parseEmit(ctx, key === 'emit');\n                    else if (['prefix', 'suffix'].indexOf(key) > -1)\n                        n && this.loadFn(n, ctx.rule);\n                    else if (key === 'type') {\n                        ctx.updateType();\n                        this.bindParser(ctx);\n                    } else if (key === 'children') {\n                        const flag = is.trueArray(n);\n                        this.deferSyncValue(() => {\n                            if (n !== o) {\n                                this.rmSub(o);\n                                this.$render.initOrgChildren();\n                            }\n                            flag && this.loadChildren(n, ctx);\n                            this.vm.$emit('update', this.api);\n                        });\n                    }\n                    this.$render.clearCache(ctx);\n                    this.watching = false;\n                }, {deep: !flag, sync: flag}));\n            });\n            this.watchEffect(ctx);\n        },\n        rmSub(sub) {\n            is.trueArray(sub) && sub.forEach(r => {\n                r && r.__fc__ && this.rmCtx(r.__fc__);\n            })\n        },\n        rmCtx(ctx) {\n            if (ctx.deleted) return;\n            const {id, field, input, name} = ctx;\n            if (ctx.input) {\n                Object.defineProperty(ctx.rule, 'value', {\n                    value: ctx.rule.value,\n                    writable: true\n                });\n            }\n\n            $del(this.ctxs, id);\n            $del(this.$render.tempList, id);\n            $del(this.$render.orgChildren, id);\n            $del(this.vm.ctxInject, id);\n            $del(this.formData, id);\n            $del(this.subForm, id);\n            $del(ctx, 'cacheValue');\n\n            input && $del(this.form, field);\n            input && this.rmIdCtx(ctx, field, 'field');\n            name && this.rmIdCtx(ctx, name, 'name');\n\n            this.deferSyncValue(() => {\n                if (!this.reloading) {\n                    if (ctx.parser.loadChildren !== false) {\n                        if (is.trueArray(ctx.rule.children)) {\n                            ctx.rule.children.forEach(h => h.__fc__ && this.rmCtx(h.__fc__));\n                        }\n                    }\n                    if (ctx.root === this.rules) {\n                        this.vm._renderRule();\n                    }\n                }\n            }, input);\n\n            const index = this.sort.indexOf(id);\n            if (index > -1) {\n                this.sort.splice(index, 1);\n            }\n\n            this.$render.clearCache(ctx);\n            ctx.delete();\n            this.effect(ctx, 'deleted');\n            input && !this.fieldCtx[field] && this.vm.$emit('removeField', field, ctx.rule, this.api);\n            ctx.rule.__ctrl || this.vm.$emit('removeRule', ctx.rule, this.api);\n            return ctx;\n        },\n    })\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is from '@form-create/utils/lib/type';\nimport {invoke} from '../frame/util';\n\n\nexport default function useLifecycle(Handler) {\n    extend(Handler.prototype, {\n        mounted() {\n            const _mounted = () => {\n                this.isMounted = true;\n                this.lifecycle('mounted');\n            }\n            if (this.pageEnd) {\n                _mounted();\n            } else {\n                this.bus.$once('page-end', _mounted);\n            }\n        },\n        lifecycle(name) {\n            const fn = this.options[name];\n            is.Function(fn) && invoke(() => fn(this.api));\n            this.vm.$emit(name, this.api);\n        },\n    })\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\n\n\nexport default function useEffect(Handler) {\n    extend(Handler.prototype, {\n        useProvider() {\n            const ps = this.fc.providers;\n            Object.keys(ps).forEach(k => {\n                const prop = ps[k];\n                prop._c = getComponent(prop);\n                this.onEffect(prop);\n                this.providers[k] = prop;\n            });\n        },\n        onEffect(provider) {\n            const used = [];\n            (provider._c || ['*']).forEach(name => {\n                const type = name === '*' ? '*' : this.getType(name);\n                if (used.indexOf(type) > -1) return;\n                used.push(type);\n                this.bus.$on(`p:${provider.name}:${type}:${provider.input ? 1 : 0}`, (event, args) => {\n                    provider[event] && provider[event](...args);\n                });\n            });\n            provider._used = used;\n        },\n        watchEffect(ctx) {\n            const vm = this.vm;\n            let effect = {};\n            Object.keys(ctx.rule.effect || {}).forEach(k => {\n                effect[k] = () => ctx.rule.effect[k];\n            })\n            Object.keys(ctx.rule).forEach(k => {\n                if (k[0] === '$') {\n                    effect[k.substr(1)] = () => ctx.rule[k];\n                }\n            })\n            Object.keys(effect || {}).forEach(k => {\n                ctx.watch.push(vm.$watch(effect[k], (n) => {\n                    this.effect(ctx, 'watch', {[k]: n});\n                }, {deep: true}));\n            });\n        },\n        ruleEffect(rule, event, append) {\n            this.emitEffect({\n                rule,\n                input: !!rule.field,\n                type: this.getType(rule.type)\n            }, event, append);\n        },\n        effect(ctx, event, custom) {\n            this.emitEffect({\n                rule: ctx.rule,\n                input: ctx.input,\n                type: ctx.trueType,\n                ctx,\n                custom\n            }, event);\n        },\n        getEffect(rule, name) {\n            if (hasProperty(rule, '$' + name)) {\n                return rule['$' + name];\n            }\n            if (hasProperty(rule, 'effect') && hasProperty(rule.effect, name))\n                return rule.effect[name];\n            return undefined;\n        },\n        emitEffect({ctx, rule, input, type, custom}, event, append) {\n            if (!type || type === 'fcFragment') return;\n            const effect = custom ? custom : (Object.keys(rule).reduce((i, k) => {\n                if (k[0] === '$') {\n                    i[k.substr(1)] = rule[k];\n                }\n                return i;\n            }, {...rule.effect || {}}));\n            Object.keys(effect).forEach(attr => {\n                const p = this.providers[attr];\n                if (!p || (p.input && !input)) return;\n                let _type;\n                if (!p._c) {\n                    _type = '*';\n                } else if (p._used.indexOf(type) > -1) {\n                    _type = type;\n                } else {\n                    return;\n                }\n                const data = {value: effect[attr], getValue: () => this.getEffect(rule, attr), ...(append || {})};\n                if (ctx) {\n                    data.getProp = () => ctx.effectData(attr);\n                    data.clearProp = () => ctx.clearEffectData(attr);\n                    data.mergeProp = (prop) => mergeProps([prop], data.getProp());\n                }\n                this.bus.$emit(`p:${attr}:${_type}:${p.input ? 1 : 0}`, event, [data, rule, this.api]);\n            });\n        }\n    });\n}\n\nfunction unique(arr) {\n    return arr.filter(function (item, index, arr) {\n        return arr.indexOf(item, 0) === index;\n    });\n}\n\nfunction getComponent(p) {\n    const c = p.components;\n    if (Array.isArray(c)) return unique(c.filter(v => v !== '*'));\n    else if (is.String(c)) return [c];\n    else return false;\n}\n","import Api from '../frame/api';\nimport Render from '../render';\nimport extend from '@form-create/utils/lib/extend';\nimport {funcProxy} from '../frame/util';\nimport useInject from './inject';\nimport usePage from './page';\nimport useRender from './render';\nimport useLoader from './loader';\nimport useInput from './input';\nimport useContext from './context';\nimport useLifecycle from './lifecycle';\nimport useEffect from './effect';\n\n\nexport default function Handler(fc) {\n    extend(this, {\n        fc,\n        vm: fc.vm,\n        watching: false,\n        loading: false,\n        reloading: false,\n        noWatchFn: null,\n        deferSyncFn: null,\n        isMounted: false,\n        formData: {},\n        subForm: {},\n        form: {},\n        appendData: {},\n        providers: {},\n        cycleLoad: null,\n        loadedId: 1,\n        nextTick: null,\n        changeStatus: false,\n        pageEnd: true,\n        nextReload: () => {\n            this.lifecycle('reload');\n        }\n    });\n\n    funcProxy(this, {\n        options() {\n            return fc.options;\n        },\n        bus() {\n            return fc.bus;\n        },\n    })\n\n    this.initData(fc.rules);\n\n    this.$manager = new fc.manager(this);\n    this.$render = new Render(this);\n    this.api = fc.extendApi(Api(this), this);\n}\n\nextend(Handler.prototype, {\n    initData(rules) {\n        extend(this, {\n            ctxs: {},\n            fieldCtx: {},\n            nameCtx: {},\n            sort: [],\n            rules,\n        });\n    },\n    init() {\n        this.appendData = {...this.fc.options.formData || {}, ...this.vm.value || {}, ...this.appendData};\n        this.useProvider();\n        this.usePage();\n        this.loadRule();\n        this.$manager.__init();\n        this.vm.$set(this.vm, 'formData', this.formData);\n    },\n})\n\nuseInject(Handler);\nusePage(Handler);\nuseRender(Handler);\nuseLoader(Handler);\nuseInput(Handler);\nuseContext(Handler);\nuseLifecycle(Handler);\nuseEffect(Handler);\n","// https://github.com/ElemeFE/element/blob/dev/packages/upload/src/ajax.js\n\nfunction getError(action, option, xhr) {\n    const msg = `fail to ${action} ${xhr.status}'`;\n    const err = new Error(msg);\n    err.status = xhr.status;\n    err.url = action;\n    return err;\n}\n\nfunction getBody(xhr) {\n    const text = xhr.responseText || xhr.response;\n    if (!text) {\n        return text;\n    }\n\n    try {\n        return JSON.parse(text);\n    } catch (e) {\n        return text;\n    }\n}\n\nexport default function fetch(option) {\n    if (typeof XMLHttpRequest === 'undefined') {\n        return;\n    }\n\n    const xhr = new XMLHttpRequest();\n    const action = option.action;\n\n    xhr.onerror = function error(e) {\n        option.onError(e);\n    };\n\n    xhr.onload = function onload() {\n        if (xhr.status < 200 || xhr.status >= 300) {\n            return option.onError(getError(action, option, xhr), getBody(xhr));\n        }\n\n        option.onSuccess(getBody(xhr));\n    };\n\n    xhr.open(option.method || 'get', action, true);\n\n    let formData;\n    if (option.data) {\n        if ((option.dataType || '').toLowerCase() !== 'json') {\n            formData = new FormData();\n            Object.keys(option.data).map(key => {\n                formData.append(key, option.data[key]);\n            });\n        } else {\n            formData = JSON.stringify(option.data);\n            xhr.setRequestHeader('content-type', 'application/json');\n        }\n    }\n\n\n    if (option.withCredentials && 'withCredentials' in xhr) {\n        xhr.withCredentials = true;\n    }\n\n    const headers = option.headers || {};\n\n    Object.keys(headers).forEach(item => {\n        if (headers[item] !== null) {\n            xhr.setRequestHeader(item, headers[item]);\n        }\n    });\n    xhr.send(formData);\n}\n","const NAME = 'fcFragment';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: ['vnode'],\n    render(h, ctx) {\n        return ctx.props.vnode ? ctx.props.vnode : ctx.children\n    }\n}\n","import toLine from '@form-create/utils/lib/toline';\nimport is from '@form-create/utils/lib/type';\nimport toString from '@form-create/utils/lib/tostring';\nimport extend from '@form-create/utils/lib/extend';\nimport Vue from 'vue';\n\nfunction parseProp(prop) {\n    if (is.String(prop))\n        return {domProps: {innerHTML: prop}};\n    return prop;\n}\n\nexport function CreateNodeFactory() {\n\n    const aliasMap = {};\n\n    function CreateNode(vm) {\n        vm && this.setVm(vm);\n    }\n\n    extend(CreateNode.prototype, {\n        setVm(vm) {\n            this.vm = vm;\n            this.$h = vm.$createElement;\n        },\n        make(tag, data, children) {\n            if (Vue.config.isReservedTag(tag) && data.nativeOn) delete data.nativeOn;\n            return this.makeComponent(tag, data, children);\n        },\n        makeComponent(type, data, children) {\n            let Node = this.$h(type, parseProp(data), children || []);\n            Node.context = this.vm;\n            return Node;\n        },\n        aliasMap\n    });\n\n    extend(CreateNode, {\n        aliasMap,\n        alias(alias, name) {\n            aliasMap[alias] = name;\n        },\n        use(nodes) {\n            Object.keys(nodes).forEach((k) => {\n                const line = toLine(k);\n                const lower = toString(k).toLocaleLowerCase();\n                const v = nodes[k];\n                [k, line, lower].forEach(n => {\n                    CreateNode.alias(k, v);\n                    CreateNode.prototype[n] = function (data, children) {\n                        return this.make(v, data, children);\n                    };\n                });\n            });\n        }\n    })\n\n    return CreateNode;\n}\n","import mergeProps from '@form-create/utils/lib/mergeprops';\nimport unique from '@form-create/utils/lib/unique';\nimport extend from '@form-create/utils/lib/extend';\n\nexport function createManager(proto) {\n    class CustomManager extends Manager {\n    }\n\n    Object.assign(CustomManager.prototype, proto);\n    return CustomManager;\n}\n\nexport default function Manager(handler) {\n    extend(this, {\n        $handle: handler,\n        vm: handler.vm,\n        options: {},\n        ref: 'fcForm',\n        mergeOptionsRule: {\n            normal: ['form', 'row', 'info', 'submitBtn', 'resetBtn']\n        }\n    });\n    this.updateKey();\n    this.init();\n}\n\nextend(Manager.prototype, {\n    __init() {\n        this.$render = this.$handle.$render;\n        this.$r = (...args) => this.$render.renderRule(...args);\n    },\n    updateKey() {\n        this.key = unique();\n    },\n    //TODO interface\n    init() {\n    },\n    update() {\n    },\n    beforeRender() {\n    },\n    form() {\n        return this.vm.$refs[this.ref];\n    },\n    mergeOptions(args, opt) {\n        return mergeProps(args.map(v => this.tidyOptions(v)), opt, this.mergeOptionsRule);\n    },\n    updateOptions(options) {\n        this.options = this.mergeOptions([options], this.getDefaultOptions());\n        this.update();\n    },\n    tidyOptions(options) {\n        return options;\n    },\n    tidyRule(ctx) {\n    },\n    mergeProp(ctx) {\n    },\n    getDefaultOptions() {\n        return {};\n    },\n    render(children) {\n    }\n})\n","import {err} from '@form-create/utils/lib/console';\nimport fetch from './fetch';\nimport {invoke} from './util';\nimport is from '@form-create/utils/lib/type';\nimport deepSet from '@form-create/utils/lib/deepset';\n\nconst $fetch = {\n    name: 'fetch',\n    loaded(...args) {\n        run(...args);\n    },\n    watch(inject, rule, api) {\n        if (!run(inject, rule, api)) {\n            inject.clearProp();\n            api.sync(rule);\n        }\n    }\n};\n\nconst $required = {\n    name: 'required',\n    load(inject, rule, api) {\n        const val = parseVa(inject.getValue());\n        if (val.required === false) {\n            inject.clearProp();\n        } else {\n            const validate = {\n                ...val,\n                required: true,\n                validator(_, v, call) {\n                    is.empty(v) ? call(validate.message) : call();\n                }\n            };\n            if (!validate.message) {\n                validate.message = rule.title + ' is required';\n            }\n            inject.getProp().validate = [validate];\n        }\n        api.sync(rule);\n    },\n    watch(...args) {\n        $required.load(...args);\n    }\n}\n\nfunction parseVa(val) {\n    if (is.Boolean(val)) {\n        return {required: val}\n    } else if (is.String(val)) {\n        return {message: val};\n    } else if (!is.Object(val)) {\n        return {};\n    } else {\n        return val;\n    }\n}\n\nfunction parseOpt(option) {\n    if (is.String(option)) {\n        option = {\n            action: option,\n            to: 'options'\n        }\n    }\n    return option;\n}\n\nfunction run(inject, rule, api) {\n    let option = inject.value;\n    if (is.Function(option)) {\n        option = option(rule, api);\n    }\n    option = parseOpt(option);\n    if (!option || !option.action) {\n        return false;\n    }\n    if (!option.to) {\n        option.to = 'options';\n    }\n    const onError = option.onError;\n\n    const check = () => {\n        if (!inject.getValue()) {\n            inject.clearProp();\n            api.sync(rule);\n            return true;\n        }\n    }\n\n    const set = (val) => {\n        if (val === undefined) {\n            inject.clearProp();\n            api.sync(rule);\n        } else {\n            deepSet(inject.getProp(), option.to, val);\n        }\n    }\n\n    invoke(() => fetch({\n        ...option,\n        onSuccess(body) {\n            if (check()) return;\n            set((option.parse || ((v) => v.data))(body, rule, api))\n            api.sync(rule);\n        },\n        onError(e) {\n            set(undefined)\n            if (check()) return;\n            (onError || ((e) => err(e.message || 'fetch fail ' + option.action)))(e, rule, api);\n        }\n    }));\n\n    return true;\n}\n\nexport default {\n    fetch: $fetch,\n    required: $required,\n};\n","import is from '@form-create/utils/lib/type';\n\nconst name = 'html';\n\nexport default {\n    name,\n    loadChildren: false,\n    render(children, ctx) {\n        if (!ctx.prop.domProps) ctx.prop.domProps = {};\n        ctx.prop.domProps.innerHTML = children;\n        return ctx.vNode.make(ctx.prop.props.tag || 'div', ctx.prop);\n    },\n    renderChildren(ctx) {\n        if (Array.isArray(ctx.rule.children)) {\n            return ctx.rule.children.filter(v => is.String(v)).join('');\n        }\n        return '';\n    }\n}\n","import $FormCreate from '../components/formCreate';\nimport Vue from 'vue';\nimport makerFactory from '../factory/maker';\nimport Handle from '../handler';\nimport fetch from './fetch';\nimport {creatorFactory} from '..';\nimport BaseParser from '../factory/parser';\nimport {copyRule, copyRules, mergeGlobal, parseJson, toJson, parseFn} from './util';\nimport fragment from '../components/fragment';\nimport is from '@form-create/utils/lib/type';\nimport toCase from '@form-create/utils/lib/tocase';\nimport extend from '@form-create/utils/lib/extend';\nimport {CreateNodeFactory} from '../factory/node';\nimport {createManager} from '../factory/manager';\nimport {arrayAttrs, keyAttrs, normalAttrs} from './attrs';\nimport {appendProto} from '../factory/creator';\nimport $provider from './provider';\nimport {deepCopy} from '@form-create/utils/lib/deepextend';\nimport html from '../parser/html';\n\nexport let _vue = typeof window !== 'undefined' && window.Vue ? window.Vue : Vue;\n\nfunction _parseProp(name, id) {\n    let prop;\n    if (arguments.length === 2) {\n        prop = arguments[1];\n        id = prop[name];\n    } else {\n        prop = arguments[2];\n    }\n    return {id, prop};\n}\n\nfunction nameProp() {\n    return _parseProp('name', ...arguments);\n}\n\nfunction _getEl(options) {\n    if (!options || !options.el) return window.document.body;\n    return is.Element(options.el)\n        ? options.el\n        : document.querySelector(options.el);\n}\n\nfunction mountForm(rules, option) {\n    const $vm = new _vue({\n        data() {\n            //todo 外部无法修改\n            return {rule: rules, option: option || {}};\n        },\n        render(h) {\n            return h('FormCreate', {ref: 'fc', props: this.$data});\n        }\n    });\n    $vm.$mount();\n    return $vm;\n}\n\nfunction exportAttrs(attrs) {\n    const key = attrs.key || [];\n    const array = attrs.array || [];\n    const normal = attrs.normal || [];\n    keyAttrs.push(...key);\n    arrayAttrs.push(...array);\n    normalAttrs.push(...normal);\n\n    appendProto([...key, ...array, ...normal]);\n}\n\nlet id = 1;\nconst instance = {};\n\n//todo 表单嵌套\nexport default function FormCreateFactory(config) {\n\n    const components = {\n        [fragment.name]: fragment\n    };\n    const parsers = {};\n    const directives = {};\n    const providers = {\n        ...$provider\n    };\n    const maker = makerFactory();\n    let globalConfig = {global: {}};\n    const data = {};\n    const CreateNode = CreateNodeFactory();\n\n    exportAttrs(config.attrs || {});\n\n    function getApi(name) {\n        const val = instance[name];\n        if (Array.isArray(val))\n            return [...val];\n        return val;\n    }\n\n    function directive() {\n        const data = nameProp(...arguments);\n        if (data.id && data.prop) directives[data.id] = data.prop;\n    }\n\n    function register() {\n        const data = nameProp(...arguments);\n        if (data.id && data.prop) providers[data.id] = {...data.prop, name: data.id};\n    }\n\n    function componentAlias(alias) {\n        CreateNode.use(alias);\n    }\n\n    function parser() {\n        const data = nameProp(...arguments);\n        if (!data.id || !data.prop) return;\n        const name = toCase(data.id);\n        const parser = data.prop;\n        const base = parser.merge === true ? parsers[name] : undefined;\n        parsers[name] = {...(base || BaseParser), ...parser};\n        maker[name] = creatorFactory(name);\n        parser.maker && extend(maker, parser.maker);\n    }\n\n    function component(id, component) {\n        let name;\n        if (is.String(id)) {\n            name = toCase(id);\n            if (['form-create', 'formcreate'].indexOf(name) > -1) {\n                return $form();\n            } else if (component === undefined) {\n                return components[name];\n            }\n        } else {\n            name = toCase(id.name);\n            component = id;\n        }\n        if (!name || !component) return;\n        components[name] = component;\n        if (component.formCreateParser) parser(name, component.formCreateParser);\n    }\n\n    function $form() {\n        return _vue.extend($FormCreate(FormCreate));\n    }\n\n    function $vnode() {\n        return _vue.extend(fragment);\n    }\n\n    //todo 检查回调函数作用域\n    function use(fn, opt) {\n        if (is.Function(fn.install)) fn.install(create, opt);\n        else if (is.Function(fn)) fn(create, opt);\n        return this;\n    }\n\n    function create(rules, _opt, parent) {\n        let $vm = mountForm(rules, _opt || {});\n        const _this = $vm.$refs.fc.formCreate;\n        _this.$parent = parent;\n        _getEl(_this.options).appendChild($vm.$el);\n        return _this.api();\n    }\n\n    function factory(inherit) {\n        let _config = {...config};\n        if (inherit) {\n            _config.inherit = {\n                components,\n                parsers,\n                directives,\n                providers,\n                maker,\n                data\n            }\n        } else {\n            delete _config.inherit;\n        }\n        return FormCreateFactory(_config);\n    }\n\n    function FormCreate(vm, rules, options) {\n        extend(this, {\n            id: id++,\n            vm,\n            create,\n            manager: createManager(config.manager),\n            parsers,\n            providers,\n            rules: Array.isArray(rules) ? rules : [],\n            name: vm.$options.propsData.name,\n            inFor: vm.$options.propsData.inFor,\n            prop: {\n                components,\n                directives,\n            },\n            CreateNode,\n            bus: new _vue,\n            unwatch: null,\n            options: options || {},\n            extendApi: config.extendApi || (api => api)\n        })\n        this.init();\n        this.initOptions(this.options);\n        if (this.name) {\n            if (this.inFor) {\n                if (!instance[this.name]) instance[this.name] = [];\n                instance[this.name].push(this.api());\n            } else {\n                instance[this.name] = this.api();\n            }\n        }\n    }\n\n    extend(FormCreate.prototype, {\n        init() {\n            const vm = this.vm;\n            const h = new Handle(this);\n            this.$handle = h;\n            vm.$f = h.api;\n            vm.$emit('input', h.api);\n\n            vm.$on('hook:created', () => {\n                if (this.isSub()) {\n                    this.unwatch = vm.$watch(() => vm.$pfc.option, () => {\n                        this.initOptions(this.options);\n                        vm.$f.refresh();\n                    }, {deep: true});\n                    this.initOptions(this.options);\n                }\n                this.created();\n            })\n            vm.$on('hook:mounted', () => {\n                this.mounted();\n            });\n            vm.$on('hook:beforeDestroy', () => {\n                vm.destroyed = true;\n                this.unwatch && this.unwatch();\n                h.reloadRule([]);\n                if (this.name) {\n                    if (this.inFor) {\n                        const idx = instance[this.name].indexOf(this.api());\n                        instance[this.name].splice(idx, 1);\n                    } else {\n                        delete instance[this.name];\n                    }\n                }\n            });\n            vm.$on('hook:updated', () => {\n                h.bindNextTick(() => this.bus.$emit('next-tick', h.api));\n            });\n        },\n        isSub() {\n            return this.vm.$pfc && this.vm.extendOption;\n        },\n        initOptions(options) {\n            this.options = {formData: {}, submitBtn: {}, resetBtn: {}, ...deepCopy(globalConfig)};\n            if (this.isSub()) {\n                this.mergeOptions(this.options, this.vm.$pfc.$f.config || {}, true);\n            }\n            this.updateOptions(options);\n        },\n        mergeOptions(target, opt, parent) {\n            opt = deepCopy(opt);\n            parent && ['page', 'onSubmit', 'mounted', 'reload', 'formData', 'el'].forEach((n) => {\n                delete opt[n];\n            });\n            if (opt.global) {\n                target.global = mergeGlobal(target.global, opt.global);\n                delete opt.global;\n            }\n            this.$handle.$manager.mergeOptions([opt], target);\n            return target;\n        },\n        updateOptions(options) {\n            this.mergeOptions(this.options, options);\n            this.$handle.$manager.updateOptions(this.options);\n        },\n        created() {\n            this.$handle.init();\n            this.vm.$emit('created', this.api());\n        },\n        api() {\n            return this.$handle.api;\n        },\n        render() {\n            return this.$handle.render();\n        },\n        mounted() {\n            this.$handle.mounted();\n        },\n    })\n\n\n    function useAttr(formCreate) {\n        extend(formCreate, {\n            version: config.version,\n            ui: config.ui,\n            data,\n            maker,\n            component,\n            directive,\n            register,\n            $vnode,\n            parser,\n            use,\n            factory,\n            componentAlias,\n            copyRule,\n            copyRules,\n            fetch,\n            $form,\n            parseFn,\n            parseJson,\n            toJson,\n            getApi,\n            init(rules, _opt = {}) {\n                let $vm = mountForm(rules, _opt), _this = $vm.$refs.fc.formCreate;\n                return {\n                    mount($el) {\n                        if ($el && is.Element($el))\n                            _this.options.el = $el;\n                        _getEl(_this.options).appendChild($vm.$el);\n                        return _this.api();\n                    },\n                    remove() {\n                        $vm.$el.parentNode && $vm.$el.parentNode.removeChild($vm.$el);\n                    },\n                    destroy() {\n                        this.remove();\n                        $vm.$destroy();\n                    },\n                    $f: _this.api()\n                };\n            }\n        });\n    }\n\n    function useStatic(formCreate) {\n        extend(formCreate, {\n            create,\n            install(Vue, options) {\n                globalConfig = {...globalConfig, ...(options || {})}\n                if (Vue._installedFormCreate === true) return;\n                Vue._installedFormCreate = true;\n                _vue = Vue;\n\n                const $formCreate = function (rules, opt = {}) {\n                    return create(rules, opt, this);\n                };\n\n                useAttr($formCreate);\n\n                Vue.prototype.$formCreate = $formCreate;\n                Vue.component('FormCreate', $form());\n                Vue.component('FcFragment', $vnode());\n            }\n        })\n    }\n\n    useAttr(create);\n    useStatic(create);\n\n    CreateNode.use({fragment: 'fcFragment'});\n\n    parser(html);\n\n    if (config.install) create.use(config);\n\n    if (config.inherit) {\n        const inherit = config.inherit;\n        inherit.components && extend(components, inherit.components);\n        inherit.parsers && extend(parsers, inherit.parsers);\n        inherit.directives && extend(directives, inherit.directives);\n        inherit.providers && extend(providers, inherit.providers);\n        inherit.maker && extend(maker, inherit.maker);\n        inherit.data && extend(data, inherit.data);\n    }\n\n    return create;\n}\n"],"names":["$set","target","field","value","Vue","set","$del","_extends","Object","assign","a","b","c","arguments","length","d","prototype","hasOwnProperty","call","extend","apply","this","toArray","Array","isArray","undefined","indexOf","NAME","getRuleInject","vm","parent","formCreateInject","$parent","$FormCreate","FormCreate","name","componentName","model","prop","provide","$pfc","inject","props","rule","type","required","option","extendOption","Boolean","api","String","subForm","inFor","data","formData","destroyed","validate","$f","isShow","unique","renderRule","ctxInject","updateValue","JSON","stringify","isMore","render","formCreate","methods","_refresh","_renderRule","_updateValue","$emit","watch","handler","n","setValue","deep","initOptions","refresh","every","v","_this","$handle","reloadRule","beforeCreate","$options","propsData","keys","forEach","k","_this2","created","fapi","rmSubForm","sub","getSubForm","idx","splice","$on","$watch","_this3","push","addSubForm","immediate","is","arg","toString","Undef","Element","_typeof","nodeType","trueArray","Function","getType","str","exec","empty","hasProperty","t","normalMerge","toArrayMerge","functionalMerge","mergeProps","objects","initial","opt","_normalMerge","_toArrayMerge","_functionalMerge","propsMerge","reduce","key","arrA","arrB","event","hook","mergeFn","fn1","fn2","keyAttrs","arrayAttrs","normalAttrs","attrs","format","msg","getRule","tip","console","warn","err","error","logError","e","deepExtend","origin","mode","isArr","clone","nst","_clone","__json","__origin","filter","__ctrl","deepCopy","PREFIX","SUFFIX","$T","$TX","FUNCTION","toJson","obj","space","val","_isVue","__emit","makeFn","fn","eval","parseFn","trim","flag","replace","__inject","parseJson","json","parse","enumerable","writable","configurable","copyRule","copyRules","rules","mergeRule","merge","array","normal","mergeGlobal","funcProxy","that","proxy","defineProperties","get","byCtx","__fc__","__origin__","invoke","def","baseRule","on","options","children","hidden","display","creatorFactory","init","title","maker","Creator","_data","appendProto","setProp","constructor","commonMaker","create","make","createTmp","template","makerFactory","factory","copy","Api","h","tidyFields","fields","getCtxs","ctx","$render","clearCache","allSubForm","subs","form","id","getFieldCtx","appendValue","appendData","getValue","coverValue","deferSyncValue","ctxs","fieldCtx","removeField","getCtx","rm","removeRule","destroy","$el","parentNode","removeChild","$destroy","append","after","child","index","sort","root","prepend","state","hiddenStatus","displayStatus","disabled","all","map","component","nameCtx","bind","reload","updateOptions","fc","onSubmit","sync","deleted","clearCacheAll","refreshOptions","$manager","hideForm","hide","changeStatus","clearChangeStatus","updateRule","updateRules","mergeRules","setEffect","attr","substr","effect","updateValidate","updateValidates","validates","refreshValidate","resetFields","defaultValue","refreshControl","method","el","Error","args","trigger","$refs","ref","closeModal","nextTick","bus","$once","nextRefresh","emit","helper","changeValue","changeField","useCache","Render","initCache","cache","use","setCache","vnode","slot","getCache","toCase","lower","toLocaleUpperCase","toLowerCase","toLine","line","toLocaleLowerCase","uniqueId","Math","random","Number","Date","now","deepSet","to","split","useRender","initRender","tempList","clearOrgChildren","initOrgChildren","orgChildren","parser","loadChildren","getTypeSlot","_fn","$scopedSlots","vn","$h","$createElement","beforeRender","renderList","renderSlot","renderName","renderId","renderField","container","renderCtx","makeVm","getInjectData","g","global","cacheConfig","originType","trueType","setOptions","optionsTo","setTempProps","$props","injectProp","injectKeys","renderTemp","compile","$nextTick","mounted","input","_this4","onInput","parseSide","side","renderSides","temp","prefix","suffix","_this5","cacheFlag","_type","none","renderChildren","initProp","tidyRule","ctxProp","preview","makeWrap","item","_this6","style","_this7","custom","mergeProp","_this8","onMounted","getFormData","callback","expression","__rule__","isRm","_this9","rmCtx","defaultRender","vNode","makeComponent","alias","aliasMap","_this10","handle","CreateNode","useInject","Handler","parseInjectEvent","injectEvent","parseEventLst","parseEvent","parseEmit","emitPrefix","emitKey","eventName","eventInject","fieldKey","_inject","computed","self","watching","loading","unshift","EVENT","usePage","page","first","limit","getLimit","parseInt","pageEnd","pageLoad","pageFn","$off","loadRule","ceil","clearNextTick","clearTimeout","bindNextTick","setTimeout","loadedId","RuleContext","wrapRef","linkOn","ctrlRule","payload","updateType","updateKey","update","useLoader","parseRule","_rule","fullRule","loadFn","loadCtrl","control","ctrl","syncProp","pre","cycleLoad","_loadRule","syncForm","isRepeat","ruleEffect","repeat","isCopy","isInit","check","isCtrl","bindParser","setCtx","_preIndex","preIndex","i","r","updated","refreshUpdate","defineProperty","valueHandle","useCtrl","controls","getCtrl","handleFn","valid","findCtrl","isHidden","reverse","ruleCon","ctrlCtx","_reloadRule","initData","reloading","nextReload","useInput","cacheValue","toValue","formValue","setFlag","setFormData","syncValue","valueChange","isQuote","isChange","toEmpty","toFormValue","deferSyncFn","strFn","refreshRule","appendLink","link","effectData","clearEffectData","setParser","unwatch","un","unlink","watchTo","watchCtx","rmCtrl","$api","_rm","noWatch","BaseParser","noneKey","useContext","getNameCtx","setIdCtx","rmIdCtx","lst","isMounted","getParser","list","parsers","noWatchFn","o","rmSub","watchEffect","useLifecycle","_mounted","lifecycle","useEffect","useProvider","ps","providers","_c","getComponent","onEffect","provider","used","_used","emitEffect","getEffect","p","getProp","clearProp","arr","components","manager","extendApi","getError","action","xhr","status","url","getBody","text","responseText","response","fetch","XMLHttpRequest","onerror","onError","onload","onSuccess","open","dataType","FormData","setRequestHeader","withCredentials","headers","send","__init","functional","parseProp","domProps","innerHTML","CreateNodeFactory","setVm","tag","config","isReservedTag","nativeOn","Node","context","nodes","createManager","proto","CustomManager","Manager","mergeOptionsRule","$r","mergeOptions","tidyOptions","getDefaultOptions","$fetch","loaded","run","$required","load","parseVa","validator","_","message","parseOpt","body","join","_vue","window","_parseProp","nameProp","_getEl","document","querySelector","mountForm","$vm","$data","$mount","exportAttrs","instance","FormCreateFactory","fragment","directives","$provider","globalConfig","getApi","directive","register","componentAlias","base","$form","formCreateParser","$vnode","install","_opt","appendChild","inherit","_config","useAttr","version","ui","mount","remove","Handle","isSub","submitBtn","resetBtn","_installedFormCreate","$formCreate","html"],"mappings":"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"}